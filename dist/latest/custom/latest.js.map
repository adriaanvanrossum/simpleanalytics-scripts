{"version":3,"file":"latest.source.js","sources":["latest.source.js"],"sourcesContent":["/* eslint-env browser */\n\n(function (window, overwriteOptions, baseUrl, apiUrlPrefix, version, saGlobal) {\n  try {\n    // Only load our script once, customers can still send multiple page views\n    // with the sa_pageview function if they turn off auto collect.\n    var loadedVariable = saGlobal + \"_loaded\";\n    if (!window || window[loadedVariable] === true) return;\n    window[loadedVariable] = true;\n\n    /////////////////////\n    // PREDEFINED VARIABLES FOR BETTER MINIFICATION\n    //\n\n    // This seems like a lot of repetition, but it makes our script available for\n    // multple destination which prevents us to need multiple scripts. The minified\n    // version stays small.\n    var https = \"https:\";\n    var pageviewsText = \"pageview\";\n    var errorText = \"error\";\n    var slash = \"/\";\n    var protocol = https + \"//\";\n    var con = window.console;\n    var doNotTrack = \"doNotTrack\";\n    var nav = window.navigator;\n    var loc = window.location;\n    var locationHostname = loc.hostname;\n    var doc = window.document;\n    var userAgent = nav.userAgent;\n    var notSending = \"Not sending request \";\n    var fetchedHighEntropyValues = false;\n    var encodeURIComponentFunc = encodeURIComponent;\n    var decodeURIComponentFunc = decodeURIComponent;\n    var stringify = JSON.stringify;\n    var thousand = 1000;\n    var addEventListenerFunc = window.addEventListener;\n    var fullApiUrl = protocol + apiUrlPrefix + baseUrl;\n    var undefinedVar = undefined;\n    var documentElement = doc.documentElement || {};\n    var language = \"language\";\n    var Height = \"Height\";\n    var Width = \"Width\";\n    var scroll = \"scroll\";\n    var trueText = \"true\";\n    var uaData = nav.userAgentData;\n    var scrollHeight = scroll + Height;\n    var offsetHeight = \"offset\" + Height;\n    var clientHeight = \"client\" + Height;\n    var clientWidth = \"client\" + Width;\n    var pagehide = \"pagehide\";\n    var platformText = \"platform\";\n    var platformVersionText = \"platformVersion\";\n    var docsUrl = \"https://docs.simpleanalytics.com\";\n    var allowParams;\n    var isBotAgent =\n      /(bot|spider|crawl)/i.test(userAgent) && !/(cubot)/i.test(userAgent);\n    var screen = window.screen;\n\n    /////////////////////\n    // HELPER FUNCTIONS\n    //\n\n    // A simple log function so the user knows why a request is not being send\n    var warn = function (message) {\n      if (con && con.warn) con.warn(\"Simple Analytics:\", message);\n    };\n\n    var now = Date.now;\n\n    var uuid = function () {\n      var cryptoObject = window.crypto || window.msCrypto;\n      var emptyUUID = [1e7] + -1e3 + -4e3 + -8e3 + -1e11;\n      var uuidRegex = /[018]/g;\n\n      try {\n        return emptyUUID.replace(uuidRegex, function (c) {\n          return (\n            c ^\n            (cryptoObject.getRandomValues(new Uint8Array(1))[0] &\n              (15 >> (c / 4)))\n          ).toString(16);\n        });\n      } catch (error) {\n        return emptyUUID.replace(uuidRegex, function (c) {\n          var r = (Math.random() * 16) | 0,\n            v = c < 2 ? r : (r & 0x3) | 0x8;\n          return v.toString(16);\n        });\n      }\n    };\n\n    var isFunction = function (func) {\n      return typeof func == \"function\";\n    };\n\n    var isString = function (string) {\n      return typeof string == \"string\";\n    };\n\n    var assign = function () {\n      var to = {};\n      var arg = arguments;\n      for (var index = 0; index < arg.length; index++) {\n        var nextSource = arg[index];\n        if (nextSource) {\n          for (var nextKey in nextSource) {\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n      return to;\n    };\n\n    var isBoolean = function (value) {\n      return !!value === value;\n    };\n\n    var getParams = function (regex, returnArray) {\n      // From the search we grab the utm_source and ref and save only that\n      var matches = loc.search.match(\n        new RegExp(\"[?&](\" + regex + \")=([^?&]+)\", \"gi\")\n      );\n      var match = matches\n        ? matches.map(function (m) {\n            return m.split(/[?&=]/).slice(-2);\n          })\n        : [];\n\n      if (match[0]) return returnArray ? match[0] : match[0][1];\n    };\n\n    // Ignore pages specified in data-ignore-pages\n    var shouldIgnore = function (path) {\n      for (var i in ignorePages) {\n        var ignorePageRaw = ignorePages[i];\n        if (!ignorePageRaw) continue;\n\n        // Prepend a slash when it's missing\n        var ignorePage =\n          ignorePageRaw[0] == slash ? ignorePageRaw : slash + ignorePageRaw;\n\n        try {\n          if (\n            ignorePage === path ||\n            new RegExp(ignorePage.replace(/\\*/gi, \"(.*)\"), \"gi\").test(path)\n          )\n            return true;\n        } catch (error) {\n          return false;\n        }\n      }\n      return false;\n    };\n\n    /////////////////////\n    // SEND DATA VIA OUR PIXEL\n    //\n\n    // Send data via image\n    var sendData = function (data, callback) {\n      return braveCallback(function (isBrave) {\n        data = assign(payload, page, data);\n\n        if (allowParams)\n          data.params = stringify(\n            allowParams\n              .map(function (param) {\n                var params = getParams(param, true);\n                if (!params) return;\n                return { key: params[0], value: params[1] };\n              })\n              .filter(Boolean)\n          );\n\n        if (isBrave) data.brave = true;\n\n\n        var image = new Image();\n        if (callback) {\n          image.onerror = callback;\n          image.onload = callback;\n        }\n        image.src =\n          fullApiUrl +\n          \"/simple.gif?\" +\n          Object.keys(data)\n            .filter(function (key) {\n              return data[key] != undefinedVar;\n            })\n            .map(function (key) {\n              return (\n                encodeURIComponentFunc(key) +\n                \"=\" +\n                encodeURIComponentFunc(data[key])\n              );\n            })\n            .join(\"&\") +\n          \"&time=\" +\n          Date.now();\n      });\n    };\n\n    /////////////////////\n    // ERROR FUNCTIONS\n    //\n\n    // Send errors\n    var sendError = function (errorOrMessage) {\n      errorOrMessage = errorOrMessage.message || errorOrMessage;\n      warn(errorOrMessage);\n      sendData({\n        type: errorText,\n        error: errorOrMessage,\n        url: definedHostname + loc.pathname,\n      });\n    };\n\n    // We listen for the error events and only send errors that are\n    // from our script (checked by filename) to our server.\n    addEventListenerFunc(\n      errorText,\n      function (event) {\n        if (event.filename && event.filename.indexOf(baseUrl) > -1) {\n          sendError(event.message);\n        }\n      },\n      false\n    );\n\n    /////////////////////\n    // INITIALIZE VALUES\n    //\n\n    var pushState = \"pushState\";\n    var dis = window.dispatchEvent;\n\n    var duration = \"duration\";\n    var start = now();\n\n    var scrolled = 0;\n\n    // This code could error on (incomplete) implementations, that's why we use try...catch\n    var timezone;\n    try {\n      timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n    } catch (e) {\n      /* Do nothing */\n    }\n\n    /////////////////////\n    // GET SETTINGS\n    //\n\n    // Find the script element where options can be set on\n    var scriptElement =\n      doc.currentScript || doc.querySelector('script[src*=\"' + baseUrl + '\"]');\n    var attr = function (scriptElement, attribute) {\n      return scriptElement && scriptElement.getAttribute(\"data-\" + attribute);\n    };\n\n    // Script mode, this can be hash mode for example\n    var mode = overwriteOptions.mode || attr(scriptElement, \"mode\");\n\n    // Should we record Do Not Track visits?\n    var collectDnt = isBoolean(overwriteOptions.collectDnt)\n      ? overwriteOptions.collectDnt\n      : attr(scriptElement, \"ignore-dnt\") == trueText ||\n        attr(scriptElement, \"skip-dnt\") == trueText ||\n        attr(scriptElement, \"collect-dnt\") == trueText;\n\n    // Customers can overwrite their hostname, here we check for that\n    var overwrittenHostname =\n      overwriteOptions.hostname || attr(scriptElement, \"hostname\");\n    var definedHostname = overwrittenHostname || locationHostname;\n\n    // Some customers want to collect page views manually\n    var autoCollect = !(\n      attr(scriptElement, \"auto-collect\") == \"false\" ||\n      overwriteOptions.autoCollect === false\n    );\n\n    var convertCommaSeparatedToArray = function (csv) {\n      return Array.isArray(csv)\n        ? csv\n        : isString(csv) && csv.length\n        ? csv.split(/, ?/)\n        : [];\n    };\n\n    // Event function name\n    var functionName =\n      overwriteOptions.saGlobal || attr(scriptElement, \"sa-global\") || saGlobal;\n\n    // Customers can ignore certain pages\n    var ignorePages = convertCommaSeparatedToArray(\n      overwriteOptions.ignorePages || attr(scriptElement, \"ignore-pages\")\n    );\n\n    // Customers can allow params\n    allowParams = convertCommaSeparatedToArray(\n      overwriteOptions.allowParams || attr(scriptElement, \"allow-params\")\n    );\n\n    // Customers can overwrite certain values\n    var pathOverwriter =\n      overwriteOptions.pathOverwriter || attr(scriptElement, \"path-overwriter\");\n\n    // By default we allow source, medium in the URLs. With strictUtm enabled\n    // we only allow it with the utm_ prefix: utm_source, utm_medium, ...\n    var strictUtm =\n      overwriteOptions.strictUtm ||\n      attr(scriptElement, \"strict-utm\") == trueText;\n\n    var braveCallback = function (callback) {\n      if (!nav.brave) callback(false);\n      else\n        nav.brave\n          .isBrave()\n          .then(function () {\n            callback(true);\n          })\n          .catch(function () {\n            callback(false);\n          });\n    };\n\n    /////////////////////\n    // PAYLOAD FOR BOTH PAGE VIEWS AND EVENTS\n    //\n\n    var bot =\n      nav.webdriver ||\n      window.__nightmare ||\n      \"callPhantom\" in window ||\n      \"_phantom\" in window ||\n      \"phantom\" in window ||\n      window.__polypane ||\n      isBotAgent;\n\n    var payload = {\n      version: version,\n      ua: userAgent,\n      https: loc.protocol == https,\n      timezone: timezone,\n      hostname: definedHostname,\n      page_id: uuid(),\n      session_id: uuid(),\n    };\n    if (bot) payload.bot = true;\n\n    payload.sri = false;\n\n    // Use User-Agent Client Hints for better privacy\n    // https://web.dev/user-agent-client-hints/\n    if (uaData) {\n      payload.mobile = uaData.mobile;\n      payload.brands = stringify(uaData.brands);\n    }\n\n    /////////////////////\n    // ADD WARNINGS\n    //\n\n\n    // Warn when no document.doctype is defined (this breaks some documentElement dimensions)\n    if (!doc.doctype) warn(\"Add DOCTYPE html for more accurate dimensions\");\n\n    // When a customer overwrites the hostname, we need to know what the original\n    // hostname was to hide that domain from referrer traffic\n    if (definedHostname !== locationHostname)\n      payload.hostname_original = locationHostname;\n\n    // Don't track when Do Not Track is set to true\n    if (!collectDnt && doNotTrack in nav && nav[doNotTrack] == \"1\")\n      return warn(\n        notSending +\n          \"when \" +\n          doNotTrack +\n          \" is enabled. See \" +\n          docsUrl +\n          \"/dnt\"\n      );\n\n    // Warn when sending from localhost and not having a hostname set\n    if (\n      (locationHostname.indexOf(\".\") == -1 ||\n        /^[0-9.:]+$/.test(locationHostname)) &&\n      !overwrittenHostname\n    )\n      warn(\n        \"Set a hostname when sending data from \" +\n          locationHostname +\n          \". See \" +\n          docsUrl +\n          \"/overwrite-domain-name\"\n      );\n\n    /////////////////////\n    // SETUP INITIAL VARIABLES\n    //\n\n    var page = {};\n    var lastSendPath;\n\n    // We don't want to end up with sensitive data so we clean the referrer URL\n    var referrer =\n      (doc.referrer || \"\")\n        .replace(locationHostname, definedHostname)\n        .replace(/^https?:\\/\\/((m|l|w{2,3}([0-9]+)?)\\.)?([^?#]+)(.*)$/, \"$4\")\n        .replace(/^([^/]+)$/, \"$1\") || undefinedVar;\n\n    // The prefix utm_ is optional with strictUtm disabled\n    var utmRegexPrefix = \"(utm_)\" + (strictUtm ? \"\" : \"?\");\n    var source = {\n      source: getParams(utmRegexPrefix + \"source\" + (strictUtm ? \"\" : \"|ref\")),\n      medium: getParams(utmRegexPrefix + \"medium\"),\n      campaign: getParams(utmRegexPrefix + \"campaign\"),\n      term: getParams(utmRegexPrefix + \"term\"),\n      content: getParams(utmRegexPrefix + \"content\"),\n      referrer: referrer,\n    };\n\n    /////////////////////\n    // TIME ON PAGE AND SCROLLED LOGIC\n    //\n\n    // We don't put msHidden in if duration block, because it's used outside of that functionality\n    var msHidden = 0;\n\n    var sendOnLeave = function (id, push) {\n      var append = { type: \"append\", original_id: push ? id : payload.page_id };\n\n      append[duration] = Math.round((now() - start - msHidden) / thousand);\n      msHidden = 0;\n      start = now();\n\n      append.scrolled = Math.max(0, scrolled, position());\n\n      if (push || !nav.sendBeacon) {\n        // sendData will assign payload to request\n        sendData(append);\n      } else {\n        nav.sendBeacon(\n          fullApiUrl + \"/append\",\n          stringify(assign(payload, append))\n        );\n      }\n    };\n\n    var hiddenStart;\n    window.addEventListener(\n      \"visibilitychange\",\n      function () {\n        if (doc.hidden) {\n          if (!(\"on\" + pagehide in window)) sendOnLeave();\n          hiddenStart = now();\n        } else msHidden += now() - hiddenStart;\n      },\n      false\n    );\n\n    addEventListenerFunc(pagehide, sendOnLeave, false);\n\n    var body = doc.body || {};\n    var position = function () {\n      try {\n        var documentClientHeight = documentElement[clientHeight] || 0;\n        var height = Math.max(\n          body[scrollHeight] || 0,\n          body[offsetHeight] || 0,\n          documentElement[clientHeight] || 0,\n          documentElement[scrollHeight] || 0,\n          documentElement[offsetHeight] || 0\n        );\n        return Math.min(\n          100,\n          Math.round(\n            (100 * ((documentElement.scrollTop || 0) + documentClientHeight)) /\n              height /\n              5\n          ) * 5\n        );\n      } catch (error) {\n        return 0;\n      }\n    };\n\n    addEventListenerFunc(\"load\", function () {\n      scrolled = position();\n      addEventListenerFunc(\n        scroll,\n        function () {\n          if (scrolled < position()) scrolled = position();\n        },\n        false\n      );\n    });\n\n    /////////////////////\n    // ACTUAL PAGE VIEW LOGIC\n    //\n\n    var getPath = function (overwrite) {\n      var path = \"\";\n\n      // decodeURIComponent can fail when having invalid characters\n      // https://github.com/simpleanalytics/roadmap/issues/462\n      try {\n        path = overwrite || decodeURIComponentFunc(loc.pathname);\n      } catch (e) {\n        // Do nothing\n      }\n\n      var pathOverwriterFunction = window[pathOverwriter];\n      if (isFunction(pathOverwriterFunction)) {\n        path = pathOverwriterFunction.call(window, path);\n      }\n\n      // Ignore pages specified in data-ignore-pages\n      if (shouldIgnore(path)) {\n        warn(notSending + \"because \" + path + \" is ignored\");\n        return;\n      }\n\n      // Add hash to path when script is put in to hash mode\n      if (mode == \"hash\" && loc.hash) path += loc.hash.split(\"?\")[0];\n\n      return path;\n    };\n\n    // Send page view and append data to it\n    var sendPageView = function (isPushState, deleteSourceInfo, sameSite) {\n      if (isPushState) sendOnLeave(\"\" + payload.page_id, true);\n      payload.page_id = uuid();\n\n      var currentPage = definedHostname + getPath();\n\n      sendData(\n        assign(\n          deleteSourceInfo\n            ? {\n                referrer: sameSite ? referrer : null,\n              }\n            : source,\n          {\n            id: payload.page_id,\n            type: pageviewsText,\n          }\n        )\n      );\n\n      referrer = currentPage;\n    };\n\n    var pageview = function (isPushState, pathOverwrite) {\n      // Obfuscate personal data in URL by dropping the search and hash\n      var path = getPath(pathOverwrite);\n\n      // Don't send the last path again (this could happen when pushState is used to change the path hash or search)\n      if (!path || lastSendPath == path) return;\n\n      lastSendPath = path;\n      page.path = path;\n\n      page.viewport_width =\n        Math.max(documentElement[clientWidth] || 0, window.innerWidth || 0) ||\n        null;\n      page.viewport_height =\n        Math.max(documentElement[clientHeight] || 0, window.innerHeight || 0) ||\n        null;\n\n      if (nav[language]) page[language] = nav[language];\n\n      if (screen) {\n        page.screen_width = screen.width;\n        page.screen_height = screen.height;\n      }\n\n      // If a user does refresh we need to delete the referrer because otherwise it count double\n      var perf = window.performance;\n      var navigation = \"navigation\";\n\n      // Check if back, forward or reload buttons are being used in modern browsers\n      var userNavigated =\n        perf &&\n        perf.getEntriesByType &&\n        perf.getEntriesByType(navigation)[0] &&\n        perf.getEntriesByType(navigation)[0].type\n          ? [\"reload\", \"back_forward\"].indexOf(\n              perf.getEntriesByType(navigation)[0].type\n            ) > -1\n          : // Check if back, forward or reload buttons are being use in older browsers\n            // 1: TYPE_RELOAD, 2: TYPE_BACK_FORWARD\n            perf &&\n            perf[navigation] &&\n            [1, 2].indexOf(perf[navigation].type) > -1;\n\n      // Check if referrer is the same as current real hostname (not the defined hostname!)\n      var sameSite = referrer\n        ? doc.referrer.split(slash)[2] == locationHostname\n        : false;\n\n      // We set unique variable based on pushstate or back navigation, if no match we check the referrer\n      page.unique = isPushState || userNavigated ? false : !sameSite;\n\n      var triggerSendPageView = function () {\n        fetchedHighEntropyValues = true;\n        sendPageView(isPushState, isPushState || userNavigated, sameSite);\n      };\n\n      if (!fetchedHighEntropyValues) {\n        // Request platform information if this is available\n        try {\n          if (uaData && isFunction(uaData.getHighEntropyValues)) {\n            uaData\n              .getHighEntropyValues([platformText, platformVersionText])\n              .then(function (highEntropyValues) {\n                payload.os_name = highEntropyValues[platformText];\n                payload.os_version = highEntropyValues[platformVersionText];\n                triggerSendPageView();\n              })\n              .catch(triggerSendPageView);\n          } else {\n            triggerSendPageView();\n          }\n        } catch (e) {\n          triggerSendPageView();\n        }\n      } else {\n        triggerSendPageView();\n      }\n    };\n\n    /////////////////////\n    // AUTOMATED PAGE VIEW COLLECTION\n    //\n\n    var his = window.history;\n    var hisPushState = his ? his.pushState : undefinedVar;\n\n    // Overwrite history pushState function to\n    // allow listening on the pushState event\n    if (autoCollect && hisPushState && Event && dis) {\n      var stateListener = function (type) {\n        var orig = his[type];\n        return function () {\n          var arg = arguments;\n          var rv = orig.apply(this, arg);\n          var event;\n          if (isFunction(Event)) {\n            event = new Event(type);\n          } else {\n            // Fix for IE\n            // https://github.com/simpleanalytics/scripts/issues/8\n            event = doc.createEvent(\"Event\");\n            event.initEvent(type, true, true);\n          }\n          event.arguments = arg;\n          dis(event);\n          return rv;\n        };\n      };\n\n      his.pushState = stateListener(pushState);\n\n      addEventListenerFunc(\n        pushState,\n        function () {\n          pageview(1);\n        },\n        false\n      );\n\n      addEventListenerFunc(\n        \"popstate\",\n        function () {\n          pageview(1);\n        },\n        false\n      );\n    }\n\n    // When in hash mode, we record a pageview based on the onhashchange function\n    if (autoCollect && mode == \"hash\" && \"onhashchange\" in window) {\n      addEventListenerFunc(\n        \"hashchange\",\n        function () {\n          pageview(1);\n        },\n        false\n      );\n    }\n\n    if (autoCollect) pageview();\n    else\n      window.sa_pageview = function (path) {\n        pageview(0, path);\n      };\n\n    /////////////////////\n    // EVENTS\n    //\n\n    var validTypes = [\"string\", \"number\"];\n\n    var sendEvent = function (event, callbackRaw) {\n      var eventIsFunction = isFunction(event);\n      var callback = isFunction(callbackRaw) ? callbackRaw : function () {};\n\n      if (validTypes.indexOf(typeof event) < 0 && !eventIsFunction) {\n        warn(\"event is not a string: \" + event);\n        return callback();\n      }\n\n      try {\n        if (eventIsFunction) {\n          event = event();\n          if (validTypes.indexOf(typeof event) < 0) {\n            warn(\"event function output is not a string: \" + event);\n            return callback();\n          }\n        }\n      } catch (error) {\n        warn(\"in your event function: \" + error.message);\n        return callback();\n      }\n\n      event = (\"\" + event).replace(/[^a-z0-9]+/gi, \"_\").replace(/(^_|_$)/g, \"\");\n\n      if (event) {\n        sendData(\n          assign(source, {\n            type: \"event\",\n            event: event,\n          }),\n          callback\n        );\n      }\n    };\n\n    var defaultEventFunc = function (event, callback) {\n      sendEvent(event, callback);\n    };\n\n    // Set default function if user didn't define a function\n    if (!window[functionName]) window[functionName] = defaultEventFunc;\n\n    var eventFunc = window[functionName];\n\n    // Read queue of the user defined function\n    var queue = eventFunc && eventFunc.q ? eventFunc.q : [];\n\n    // Overwrite user defined function\n    window[functionName] = defaultEventFunc;\n\n    // Post events from the queue of the user defined function\n    for (var event in queue) {\n      if (Object.prototype.hasOwnProperty.call(queue, event)) {\n        Array.isArray(queue[event])\n          ? sendEvent.apply(null, queue[event])\n          : sendEvent(queue[event]);\n      }\n    }\n  } catch (e) {\n    sendError(e);\n  }\n})(\n  window,\n  {},\n  \"<!--# echo var="http_host" default="" -->\",\n  \"\",\n  \"custom_latest_9\",\n  \"sa_event\"\n);\n"],"names":["window","overwriteOptions","baseUrl","saGlobal","loadedVariable","https","errorText","con","console","doNotTrack","nav","navigator","loc","location","locationHostname","hostname","doc","document","userAgent","notSending","fetchedHighEntropyValues","encodeURIComponentFunc","encodeURIComponent","decodeURIComponentFunc","decodeURIComponent","stringify","JSON","addEventListenerFunc","addEventListener","fullApiUrl","undefinedVar","undefined","documentElement","language","Height","scroll","trueText","uaData","userAgentData","scrollHeight","offsetHeight","clientHeight","pagehide","platformText","platformVersionText","docsUrl","isBotAgent","test","screen","warn","message","now","Date","uuid","cryptoObject","crypto","msCrypto","emptyUUID","uuidRegex","replace","c","getRandomValues","Uint8Array","toString","error","r","Math","random","isFunction","func","assign","to","arg","arguments","index","length","nextSource","nextKey","Object","prototype","hasOwnProperty","call","getParams","regex","returnArray","matches","search","match","RegExp","map","m","split","slice","sendData","data","callback","braveCallback","isBrave","payload","page","allowParams","params","param","key","value","filter","Boolean","brave","image","Image","onerror","onload","src","keys","join","sendError","errorOrMessage","type","url","definedHostname","pathname","event","filename","indexOf","timezone","pushState","dis","dispatchEvent","start","scrolled","Intl","DateTimeFormat","resolvedOptions","timeZone","e","scriptElement","currentScript","querySelector","attr","attribute","getAttribute","mode","collectDnt","overwrittenHostname","autoCollect","convertCommaSeparatedToArray","csv","Array","isArray","functionName","ignorePages","pathOverwriter","strictUtm","then","catch","bot","webdriver","__nightmare","__polypane","version","ua","protocol","page_id","session_id","sri","mobile","brands","doctype","hostname_original","lastSendPath","hiddenStart","referrer","utmRegexPrefix","source","medium","campaign","term","content","msHidden","sendOnLeave","id","push","append","original_id","round","max","position","sendBeacon","hidden","body","documentClientHeight","height","min","scrollTop","getPath","overwrite","path","pathOverwriterFunction","i","ignorePageRaw","ignorePage","shouldIgnore","hash","pageview","isPushState","pathOverwrite","viewport_width","innerWidth","viewport_height","innerHeight","screen_width","width","screen_height","perf","performance","navigation","userNavigated","getEntriesByType","sameSite","unique","triggerSendPageView","deleteSourceInfo","currentPage","sendPageView","getHighEntropyValues","highEntropyValues","os_name","os_version","his","history","hisPushState","Event","orig","rv","apply","this","createEvent","initEvent","sa_pageview","validTypes","sendEvent","callbackRaw","eventIsFunction","defaultEventFunc","eventFunc","queue","q"],"mappings":"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"}