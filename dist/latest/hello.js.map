{"version":3,"file":"hello.source.js","sources":["hello.source.js"],"sourcesContent":["/* eslint-env browser */\n\n(function (window, overwriteOptions, baseUrl, apiUrlPrefix, version, saGlobal) {\n  if (!window) return;\n  try {\n    /////////////////////\n    // PREDEFINED VARIABLES FOR BETTER MINIFICATION\n    //\n\n    // This seems like a lot of repetition, but it makes our script available for\n    // multple destination which prevents us to need multiple scripts. The minified\n    // version stays small.\n    var https = \"https:\";\n    var pageviewsText = \"pageview\";\n    var errorText = \"error\";\n    var protocol = https + \"//\";\n    var con = window.console;\n    var doNotTrack = \"doNotTrack\";\n    var slash = \"/\";\n    var nav = window.navigator;\n    var loc = window.location;\n    var locationHostname = loc.hostname;\n    var doc = window.document;\n    var userAgent = nav.userAgent;\n    var notSending = \"Not sending request \";\n    var encodeURIComponentFunc = encodeURIComponent;\n    var decodeURIComponentFunc = decodeURIComponent;\n    var stringify = JSON.stringify;\n    var thousand = 1000;\n    var addEventListenerFunc = window.addEventListener;\n    var fullApiUrl = protocol + apiUrlPrefix + baseUrl;\n    var undefinedVar = undefined;\n    var documentElement = doc.documentElement || {};\n    var language = \"language\";\n    var Height = \"Height\";\n    var Width = \"Width\";\n    var scroll = \"scroll\";\n    var scrollHeight = scroll + Height;\n    var offsetHeight = \"offset\" + Height;\n    var clientHeight = \"client\" + Height;\n    var clientWidth = \"client\" + Width;\n    var pagehide = \"pagehide\";\n    var isBotAgent =\n      /(bot|spider|crawl)/i.test(userAgent) && !/(cubot)/i.test(userAgent);\n    var screen = window.screen;\n\n    /////////////////////\n    // PAYLOAD FOR BOTH PAGE VIEWS AND EVENTS\n    //\n\n    var bot =\n      nav.webdriver ||\n      window.__nightmare ||\n      \"callPhantom\" in window ||\n      \"_phantom\" in window ||\n      \"phantom\" in window ||\n      isBotAgent;\n\n\n    var payload = {\n      version: version,\n    };\n    if (bot) payload.bot = true;\n\n    /////////////////////\n    // HELPER FUNCTIONS\n    //\n\n    // A simple log function so the user knows why a request is not being send\n    var warn = function (message) {\n      if (con && con.warn) con.warn(\"Simple Analytics:\", message);\n    };\n\n    var now = Date.now;\n\n    var uuid = function () {\n      var cryptoObject = window.crypto || window.msCrypto;\n      var emptyUUID = [1e7] + -1e3 + -4e3 + -8e3 + -1e11;\n      var uuidRegex = /[018]/g;\n\n      try {\n        return emptyUUID.replace(uuidRegex, function (c) {\n          return (\n            c ^\n            (cryptoObject.getRandomValues(new Uint8Array(1))[0] &\n              (15 >> (c / 4)))\n          ).toString(16);\n        });\n      } catch (error) {\n        return emptyUUID.replace(uuidRegex, function (c) {\n          var r = (Math.random() * 16) | 0,\n            v = c < 2 ? r : (r & 0x3) | 0x8;\n          return v.toString(16);\n        });\n      }\n    };\n\n    var assign = function () {\n      var to = {};\n      var arg = arguments;\n      for (var index = 0; index < arg.length; index++) {\n        var nextSource = arg[index];\n        if (nextSource) {\n          for (var nextKey in nextSource) {\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n      return to;\n    };\n\n    var isBoolean = function (value) {\n      return !!value === value;\n    };\n\n    var getParams = function (regex) {\n      // From the search we grab the utm_source and ref and save only that\n      var matches = loc.search.match(\n        new RegExp(\"[?&](\" + regex + \")=([^?&]+)\", \"gi\")\n      );\n      var match = matches\n        ? matches.map(function (m) {\n            return m.split(\"=\")[1];\n          })\n        : [];\n      if (match && match[0]) return match[0];\n    };\n\n    // Ignore pages specified in data-ignore-pages\n    var shouldIgnore = function (path) {\n      for (var i in ignorePages) {\n        var ignorePageRaw = ignorePages[i];\n        if (!ignorePageRaw) continue;\n\n        // Prepend a slash when it's missing\n        var ignorePage =\n          ignorePageRaw[0] == \"/\" ? ignorePageRaw : \"/\" + ignorePageRaw;\n\n        try {\n          if (\n            ignorePage === path ||\n            new RegExp(ignorePage.replace(/\\*/gi, \"(.*)\"), \"gi\").test(path)\n          )\n            return true;\n        } catch (error) {\n          return false;\n        }\n      }\n      return false;\n    };\n\n    /////////////////////\n    // SEND DATA VIA OUR PIXEL\n    //\n\n    // Send data via image\n    var sendData = function (data, callback) {\n      data = assign(payload, data);\n      var image = new Image();\n      if (callback) {\n        image.onerror = callback;\n        image.onload = callback;\n      }\n      image.src =\n        fullApiUrl +\n        \"/simple.gif?\" +\n        Object.keys(data)\n          .filter(function (key) {\n            return data[key] != undefinedVar;\n          })\n          .map(function (key) {\n            return (\n              encodeURIComponentFunc(key) +\n              \"=\" +\n              encodeURIComponentFunc(data[key])\n            );\n          })\n          .join(\"&\");\n    };\n\n    /////////////////////\n    // ERROR FUNCTIONS\n    //\n\n    // Send errors\n    var sendError = function (errorOrMessage) {\n      errorOrMessage = errorOrMessage.message || errorOrMessage;\n      warn(errorOrMessage);\n      sendData({\n        type: errorText,\n        error: errorOrMessage,\n        url: definedHostname + loc.pathname,\n      });\n    };\n\n    // We listen for the error events and only send errors that are\n    // from our script (checked by filename) to our server.\n    addEventListenerFunc(\n      errorText,\n      function (event) {\n        if (event.filename && event.filename.indexOf(baseUrl) > -1) {\n          sendError(event.message);\n        }\n      },\n      false\n    );\n\n    /////////////////////\n    // INITIALIZE VALUES\n    //\n\n    var pushState = \"pushState\";\n    var dis = window.dispatchEvent;\n\n    var duration = \"duration\";\n    var start = now();\n\n    var scrolled = 0;\n\n    // This code could error on (incomplete) implementations, that's why we use try...catch\n    var timezone;\n    try {\n      timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n    } catch (e) {\n      /* Do nothing */\n    }\n\n    /////////////////////\n    // GET SETTINGS\n    //\n\n    // Find the script element where options can be set on\n    var scriptElement = doc.querySelector('script[src*=\"' + baseUrl + '\"]');\n    var attr = function (scriptElement, attribute) {\n      return scriptElement && scriptElement.getAttribute(\"data-\" + attribute);\n    };\n\n    // Script mode, this can be hash mode for example\n    var mode = overwriteOptions.mode || attr(scriptElement, \"mode\");\n\n    // Should we record Do Not Track visits?\n    var collectDnt = isBoolean(overwriteOptions.collectDnt)\n      ? overwriteOptions.collectDnt\n      : attr(scriptElement, \"ignore-dnt\") == \"true\" ||\n        attr(scriptElement, \"skip-dnt\") == \"true\";\n\n    // Customers can overwrite their hostname, here we check for that\n    var definedHostname =\n      overwriteOptions.hostname ||\n      attr(scriptElement, \"hostname\") ||\n      locationHostname;\n\n    // Some customers want to collect page views manually\n    var autoCollect = !(\n      attr(scriptElement, \"auto-collect\") == \"false\" ||\n      overwriteOptions.autoCollect === false\n    );\n\n    // Event function name\n    var functionName =\n      overwriteOptions.saGlobal || attr(scriptElement, \"sa-global\") || saGlobal;\n\n    // Customers can ignore certain pages\n    var ignorePagesRaw =\n      overwriteOptions.ignorePages || attr(scriptElement, \"ignore-pages\");\n\n    // Make sure ignore pages is an array\n    var ignorePages = Array.isArray(ignorePagesRaw)\n      ? ignorePagesRaw\n      : typeof ignorePagesRaw == \"string\" && ignorePagesRaw.length\n      ? ignorePagesRaw.split(/, ?/)\n      : [];\n\n    /////////////////////\n    // ADD HOSTNAME TO PAYLOAD\n    //\n\n    payload.hostname = definedHostname;\n\n    /////////////////////\n    // ADD WARNINGS\n    //\n\n    // Warn when no document.doctype is defined (this breaks some documentElement dimensions)\n    if (!doc.doctype) warn(\"Add DOCTYPE html for more accurate dimensions\");\n\n    // When a customer overwrites the hostname, we need to know what the original\n    // hostname was to hide that domain from referrer traffic\n    if (definedHostname !== locationHostname)\n      payload.hostname_original = locationHostname;\n\n    // Don't track when Do Not Track is set to true\n    if (!collectDnt && doNotTrack in nav && nav[doNotTrack] == \"1\")\n      return warn(notSending + \"when \" + doNotTrack + \" is enabled\");\n\n    // Don't track when localhost or when it's an IP address\n    if (\n      locationHostname.indexOf(\".\") == -1 ||\n      /^[0-9]+$/.test(locationHostname.replace(/\\./g, \"\"))\n    )\n      return warn(notSending + \"from \" + locationHostname);\n\n    /////////////////////\n    // SETUP INITIAL VARIABLES\n    //\n\n    var page = {};\n    var lastPageId = uuid();\n    var lastSendPath;\n\n    // We don't want to end up with sensitive data so we clean the referrer URL\n    var referrer =\n      (doc.referrer || \"\")\n        .replace(locationHostname, definedHostname)\n        .replace(/^https?:\\/\\/((m|l|w{2,3}([0-9]+)?)\\.)?([^?#]+)(.*)$/, \"$4\")\n        .replace(/^([^/]+)$/, \"$1\") || undefinedVar;\n\n    // The prefix utm_ is optional\n    var utmRegexPrefix = \"(utm_)?\";\n    var source = {\n      source: getParams(utmRegexPrefix + \"source|ref\"),\n      medium: getParams(utmRegexPrefix + \"medium\"),\n      campaign: getParams(utmRegexPrefix + \"campaign\"),\n      term: getParams(utmRegexPrefix + \"term\"),\n      content: getParams(utmRegexPrefix + \"content\"),\n      referrer: referrer,\n    };\n\n    /////////////////////\n    // TIME ON PAGE AND SCROLLED LOGIC\n    //\n\n    // We don't put msHidden in if duration block, because it's used outside of that functionality\n    var msHidden = 0;\n\n    var sendBeaconText = \"sendBeacon\";\n\n    var sendOnLeave = function (id, push) {\n      var append = { type: \"append\", original_id: push ? id : lastPageId };\n\n      append[duration] = Math.round((now() - start - msHidden) / thousand);\n      msHidden = 0;\n      start = now();\n\n      append.scrolled = Math.max(0, scrolled, position());\n\n      if (push || !(sendBeaconText in nav)) {\n        sendData(append);\n      } else {\n        nav[sendBeaconText](\n          fullApiUrl + \"/append\",\n          stringify(assign(payload, append))\n        );\n      }\n    };\n\n    var hiddenStart;\n    window.addEventListener(\n      \"visibilitychange\",\n      function () {\n        if (doc.hidden) {\n          if (!(\"on\" + pagehide in window)) sendOnLeave();\n          hiddenStart = now();\n        } else msHidden += now() - hiddenStart;\n      },\n      false\n    );\n\n    addEventListenerFunc(pagehide, sendOnLeave, false);\n\n    var body = doc.body || {};\n    var position = function () {\n      try {\n        var documentClientHeight = documentElement[clientHeight] || 0;\n        var height = Math.max(\n          body[scrollHeight] || 0,\n          body[offsetHeight] || 0,\n          documentElement[clientHeight] || 0,\n          documentElement[scrollHeight] || 0,\n          documentElement[offsetHeight] || 0\n        );\n        return Math.min(\n          100,\n          Math.round(\n            (100 * ((documentElement.scrollTop || 0) + documentClientHeight)) /\n              height /\n              5\n          ) * 5\n        );\n      } catch (error) {\n        return 0;\n      }\n    };\n\n    addEventListenerFunc(\"load\", function () {\n      scrolled = position();\n      addEventListenerFunc(\n        scroll,\n        function () {\n          if (scrolled < position()) scrolled = position();\n        },\n        false\n      );\n    });\n\n    /////////////////////\n    // ACTUAL PAGE VIEW LOGIC\n    //\n\n    var getPath = function (overwrite) {\n      var path = overwrite || decodeURIComponentFunc(loc.pathname);\n\n      // Ignore pages specified in data-ignore-pages\n      if (shouldIgnore(path)) {\n        warn(notSending + \"because \" + path + \" is ignored\");\n        return;\n      }\n\n      // Add hash to path when script is put in to hash mode\n      if (mode == \"hash\" && loc.hash) path += loc.hash.split(\"?\")[0];\n\n      return path;\n    };\n\n    // Send page view and append data to it\n    var sendPageView = function (isPushState, deleteSourceInfo, sameSite) {\n      if (isPushState) sendOnLeave(\"\" + lastPageId, true);\n      lastPageId = uuid();\n      page.id = lastPageId;\n\n      var currentPage = definedHostname + getPath();\n\n      sendData(\n        assign(\n          page,\n          deleteSourceInfo\n            ? {\n                referrer: sameSite ? referrer : null,\n              }\n            : source,\n          {\n            https: loc.protocol == https,\n            timezone: timezone,\n            type: pageviewsText,\n          }\n        )\n      );\n\n      referrer = currentPage;\n    };\n\n    var pageview = function (isPushState, pathOverwrite) {\n      // Obfuscate personal data in URL by dropping the search and hash\n      var path = getPath(pathOverwrite);\n\n      // Don't send the last path again (this could happen when pushState is used to change the path hash or search)\n      if (!path || lastSendPath == path) return;\n\n      lastSendPath = path;\n\n      var data = {\n        path: path,\n        viewport_width:\n          Math.max(documentElement[clientWidth] || 0, window.innerWidth || 0) ||\n          null,\n        viewport_height:\n          Math.max(\n            documentElement[clientHeight] || 0,\n            window.innerHeight || 0\n          ) || null,\n      };\n\n      if (nav[language]) data[language] = nav[language];\n\n      if (screen) {\n        data.screen_width = screen.width;\n        data.screen_height = screen.height;\n      }\n\n      // If a user does refresh we need to delete the referrer because otherwise it count double\n      var perf = window.performance;\n      var navigation = \"navigation\";\n\n      // Check if back, forward or reload buttons are being used in modern browsers\n      var userNavigated =\n        perf &&\n        perf.getEntriesByType &&\n        perf.getEntriesByType(navigation)[0] &&\n        perf.getEntriesByType(navigation)[0].type\n          ? [\"reload\", \"back_forward\"].indexOf(\n              perf.getEntriesByType(navigation)[0].type\n            ) > -1\n          : // Check if back, forward or reload buttons are being use in older browsers\n            // 1: TYPE_RELOAD, 2: TYPE_BACK_FORWARD\n            perf &&\n            perf[navigation] &&\n            [1, 2].indexOf(perf[navigation].type) > -1;\n\n      // Check if referrer is the same as current hostname\n      var sameSite = referrer\n        ? referrer.split(slash)[0] == definedHostname\n        : false;\n\n      // We set unique variable based on pushstate or back navigation, if no match we check the referrer\n      data.unique = isPushState || userNavigated ? false : !sameSite;\n\n      page = data;\n\n      sendPageView(isPushState, isPushState || userNavigated, sameSite);\n    };\n\n    /////////////////////\n    // AUTOMATED PAGE VIEW COLLECTION\n    //\n\n    var his = window.history;\n    var hisPushState = his ? his.pushState : undefinedVar;\n\n    // Overwrite history pushState function to\n    // allow listening on the pushState event\n    if (autoCollect && hisPushState && Event && dis) {\n      var stateListener = function (type) {\n        var orig = his[type];\n        return function () {\n          var arg = arguments;\n          var rv = orig.apply(this, arg);\n          var event;\n          if (typeof Event == \"function\") {\n            event = new Event(type);\n          } else {\n            // Fix for IE\n            event = doc.createEvent(\"Event\");\n            event.initEvent(type, true, true);\n          }\n          event.arguments = arg;\n          dis(event);\n          return rv;\n        };\n      };\n\n      his.pushState = stateListener(pushState);\n\n      addEventListenerFunc(\n        pushState,\n        function () {\n          pageview(1);\n        },\n        false\n      );\n\n      addEventListenerFunc(\n        \"popstate\",\n        function () {\n          pageview(1);\n        },\n        false\n      );\n    }\n\n    // When in hash mode, we record a pageview based on the onhashchange function\n    if (autoCollect && mode == \"hash\" && \"onhashchange\" in window) {\n      addEventListenerFunc(\n        \"hashchange\",\n        function () {\n          pageview(1);\n        },\n        false\n      );\n    }\n\n    if (autoCollect) pageview();\n    else\n      window.sa_pageview = function (path) {\n        pageview(0, path);\n      };\n\n    /////////////////////\n    // EVENTS\n    //\n\n    var sessionId = uuid();\n    var validTypes = [\"string\", \"number\"];\n\n    var sendEvent = function (event, callbackRaw) {\n      var isFunction = event instanceof Function;\n      var callback =\n        callbackRaw instanceof Function ? callbackRaw : function () {};\n\n      if (validTypes.indexOf(typeof event) < 0 && !isFunction) {\n        warn(\"event is not a string: \" + event);\n        return callback();\n      }\n\n      try {\n        if (isFunction) {\n          event = event();\n          if (validTypes.indexOf(typeof event) < 0) {\n            warn(\"event function output is not a string: \" + event);\n            return callback();\n          }\n        }\n      } catch (error) {\n        warn(\"in your event function: \" + error.message);\n        return callback();\n      }\n\n      event = (\"\" + event).replace(/[^a-z0-9]+/gi, \"_\").replace(/(^_|_$)/g, \"\");\n\n      if (event)\n        sendData(\n          assign(source, bot ? { bot: true } : {}, {\n            type: \"event\",\n            event: event,\n            page_id: page.id,\n            session_id: sessionId,\n          }),\n          callback\n        );\n    };\n\n    var defaultEventFunc = function (event, callback) {\n      sendEvent(event, callback);\n    };\n\n    // Set default function if user didn't define a function\n    if (!window[functionName]) window[functionName] = defaultEventFunc;\n\n    var eventFunc = window[functionName];\n\n    // Read queue of the user defined function\n    var queue = eventFunc && eventFunc.q ? eventFunc.q : [];\n\n    // Overwrite user defined function\n    window[functionName] = defaultEventFunc;\n\n    // Post events from the queue of the user defined function\n    for (var event in queue) sendEvent(queue[event]);\n  } catch (e) {\n    sendError(e);\n  }\n})(\n  window,\n  {},\n  \"simpleanalyticscdn.com\",\n  \"queue.\",\n  \"cdn_hello\",\n  \"sa_event\"\n);\n"],"names":["window","overwriteOptions","baseUrl","type","orig","value","https","errorText","con","console","doNotTrack","nav","navigator","loc","location","locationHostname","hostname","doc","document","userAgent","notSending","encodeURIComponentFunc","encodeURIComponent","decodeURIComponentFunc","decodeURIComponent","stringify","JSON","addEventListenerFunc","addEventListener","fullApiUrl","protocol","undefinedVar","undefined","documentElement","language","Height","scroll","scrollHeight","offsetHeight","clientHeight","pagehide","isBotAgent","test","screen","bot","webdriver","__nightmare","payload","version","warn","message","now","Date","uuid","cryptoObject","crypto","msCrypto","emptyUUID","uuidRegex","replace","c","getRandomValues","Uint8Array","toString","error","r","Math","random","assign","to","arg","arguments","index","length","nextSource","nextKey","Object","prototype","hasOwnProperty","call","getParams","regex","matches","search","match","RegExp","map","m","split","sendData","data","callback","image","Image","onerror","onload","src","keys","filter","key","join","sendError","errorOrMessage","url","definedHostname","pathname","event","filename","indexOf","timezone","pushState","dis","dispatchEvent","start","scrolled","Intl","DateTimeFormat","resolvedOptions","timeZone","e","scriptElement","querySelector","attr","attribute","getAttribute","mode","collectDnt","autoCollect","functionName","saGlobal","ignorePagesRaw","ignorePages","Array","isArray","doctype","hostname_original","lastSendPath","hiddenStart","page","lastPageId","referrer","utmRegexPrefix","source","medium","campaign","term","content","msHidden","sendBeaconText","sendOnLeave","id","push","append","original_id","round","max","position","hidden","body","documentClientHeight","height","min","scrollTop","getPath","overwrite","path","i","ignorePageRaw","ignorePage","shouldIgnore","hash","pageview","isPushState","pathOverwrite","perf","navigation","userNavigated","sameSite","viewport_width","innerWidth","viewport_height","innerHeight","screen_width","width","screen_height","performance","getEntriesByType","unique","deleteSourceInfo","currentPage","sendPageView","his","history","hisPushState","Event","rv","apply","this","createEvent","initEvent","sa_pageview","sessionId","validTypes","sendEvent","callbackRaw","isFunction","Function","page_id","session_id","defaultEventFunc","eventFunc","queue","q"],"mappings":"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"}