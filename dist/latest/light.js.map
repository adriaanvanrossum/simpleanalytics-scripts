{"version":3,"file":"light.source.js","sources":["light.source.js"],"sourcesContent":["/* eslint-env browser */\n\n(function (\n  window,\n  overwriteOptions,\n  baseUrl,\n  apiUrlPrefix,\n  version,\n  defaultNamespace,\n  sendError,\n  warn\n) {\n  try {\n    /////////////////////\n    // PREDEFINED VARIABLES FOR BETTER MINIFICATION\n    //\n\n    // This seems like a lot of repetition, but it makes our script available for\n    // multple destination which prevents us to need multiple scripts. The minified\n    // version stays small.\n    var undefinedVar = undefined;\n    var trueVar = true;\n    var falseVar = false;\n    var trueText = \"true\";\n    var https = \"https:\";\n    var pageviewText = \"pageview\";\n    var eventText = \"event\";\n    var slash = \"/\";\n    var protocol = https + \"//\";\n    var con = window.console;\n    var doNotTrack = \"doNotTrack\";\n    var nav = window.navigator;\n    var loc = window.location;\n    var locationHostname = loc.host;\n    var doc = window.document;\n    var userAgent = nav.userAgent;\n    var notSending = \"Not sending request \";\n    var notSendingWhen = notSending + \"when \";\n    var fetchedHighEntropyValues = falseVar;\n    var encodeURIComponentFunc = encodeURIComponent;\n    var decodeURIComponentFunc = decodeURIComponent;\n    var stringify = JSON.stringify;\n    var thousand = 1000;\n    var addEventListenerFunc = window.addEventListener;\n    var fullApiUrl = protocol + apiUrlPrefix + baseUrl;\n    var documentElement = doc.documentElement || {};\n    var language = \"language\";\n    var Height = \"Height\";\n    var Width = \"Width\";\n    var scroll = \"scroll\";\n    var uaData = nav.userAgentData;\n    var scrollHeight = scroll + Height;\n    var offsetHeight = \"offset\" + Height;\n    var clientHeight = \"client\" + Height;\n    var clientWidth = \"client\" + Width;\n    var pagehide = \"pagehide\";\n    var platformText = \"platform\";\n    var platformVersionText = \"platformVersion\";\n    var docsUrl = \"https://docs.simpleanalytics.com\";\n    var isBotAgent =\n      /(bot|spider|crawl)/i.test(userAgent) && !/(cubot)/i.test(userAgent);\n\n    // Find the script element where options can be set on\n    var scriptElement =\n      doc.currentScript || doc.querySelector('script[src*=\"' + baseUrl + '\"]');\n\n    /////////////////////\n    // HELPER FUNCTIONS\n    //\n\n    // A simple log function so the user knows why a request is not being send\n    warn = function () {\n      // 1. Convert args to a normal array\n      var args = [].slice.call(arguments);\n\n      // 2. Prepend log prefix\n      args.unshift(\"Simple Analytics: \");\n\n      // 3. Pass along arguments to console.warn\n      // Function.prototype.bind.call is needed for Internet Explorer\n      var log = Function.prototype.bind.call(con.warn, con);\n      log.apply(con, args);\n    };\n\n    var warnInFunction = function (name, error) {\n      warn(\"Error in your \" + name + \" function:\", error);\n    };\n\n    var hasProp = function (obj, prop) {\n      return Object.prototype.hasOwnProperty.call(obj, prop);\n    };\n\n    var isString = function (string) {\n      return typeof string == \"string\";\n    };\n\n    var filterRegex = function (item) {\n      return item.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n    };\n\n    var attr = function (scriptElement, attribute) {\n      return scriptElement && scriptElement.getAttribute(\"data-\" + attribute);\n    };\n\n    var convertCommaSeparatedToArray = function (csv) {\n      return Array.isArray(csv)\n        ? csv\n        : isString(csv) && csv.length\n        ? csv.split(/, ?/)\n        : [];\n    };\n\n    var isObject = function (object) {\n      return object && object.constructor === Object;\n    };\n\n    var assign = function () {\n      var to = {};\n      var arg = arguments;\n      for (var index = 0; index < arg.length; index++) {\n        var nextSource = arg[index];\n        if (isObject(nextSource)) {\n          for (var nextKey in nextSource) {\n            if (hasProp(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n      return to;\n    };\n\n    // Merge overwriteOptions with sa_settings\n    overwriteOptions = assign(overwriteOptions, window.sa_settings);\n\n\n    var collectMetricByString = function (metricAbbreviation) {\n      return true;\n    };\n\n    var now = Date.now;\n\n    var uuid = function () {\n      var cryptoObject = window.crypto || window.msCrypto;\n      var emptyUUID = [1e7] + -1e3 + -4e3 + -8e3 + -1e11;\n      var uuidRegex = /[018]/g;\n\n      try {\n        return emptyUUID.replace(uuidRegex, function (c) {\n          return (\n            c ^\n            (cryptoObject.getRandomValues(new Uint8Array(1))[0] &\n              (15 >> (c / 4)))\n          ).toString(16);\n        });\n      } catch (error) {\n        return emptyUUID.replace(uuidRegex, function (c) {\n          var r = (Math.random() * 16) | 0,\n            v = c < 2 ? r : (r & 0x3) | 0x8;\n          return v.toString(16);\n        });\n      }\n    };\n\n    var isFunction = function (func) {\n      return typeof func == \"function\";\n    };\n\n    // Define namespace for the library\n    var namespaceText = \"namespace\";\n    var namespace =\n      overwriteOptions[namespaceText] ||\n      attr(scriptElement, namespaceText) ||\n      defaultNamespace;\n\n\n    var isBoolean = function (value) {\n      return !!value === value;\n    };\n\n    // By default we allow source, medium in the URLs. With strictUtm enabled\n    // we only allow it with the utm_ prefix: utm_source, utm_medium, ...\n    var strictUtm =\n      overwriteOptions.strictUtm ||\n      attr(scriptElement, \"strict-utm\") == trueText;\n\n    var getQueryParams = function (ignoreSource) {\n      return (\n        loc.search\n          .slice(1)\n          .split(\"&\")\n          .filter(function (keyValue) {\n            var ignore = ignoreSource || !collectMetricByString(\"ut\");\n\n            if (ignore) return falseVar;\n            var regex =\n              \"^((utm_)\" +\n              (strictUtm ? \"\" : \"?\") +\n              \"(source|medium|content|term|campaign)\" +\n              (strictUtm ? \"\" : \"|ref\") +\n              \")=\";\n\n            // The prefix \"utm_\" is optional with \"strictUtm\" disabled\n            // \"ref\" is only collected when \"strictUtm\" is disabled\n            return new RegExp(regex).test(keyValue);\n          })\n          .join(\"&\") || undefinedVar\n      );\n    };\n\n\n    /////////////////////\n    // Warn when using script twice\n    //\n\n    // Only load our script once, customers can still send multiple page views\n    // with the sa_pageview function if they turn off auto collect.\n    var loadedVariable = namespace + \"_loaded\";\n    if (window[loadedVariable] == trueVar) return warn(notSending + \"twice\");\n    window.sa_event_loaded = trueVar;\n    window[loadedVariable] = trueVar;\n\n    /////////////////////\n    // SEND DATA VIA OUR PIXEL\n    //\n\n    // Send data via image\n    var sendData = function (data, callback, onlyThisData) {\n      data = onlyThisData ? data : assign(payload, page, data);\n\n      if (nav.brave && !onlyThisData) data.brave = trueVar;\n\n\n      var image = new Image();\n      image.src =\n        fullApiUrl +\n        \"/simple.gif?\" +\n        Object.keys(data)\n          .filter(function (key) {\n            return data[key] != undefinedVar;\n          })\n          .map(function (key) {\n            return (\n              encodeURIComponentFunc(key) +\n              \"=\" +\n              encodeURIComponentFunc(data[key])\n            );\n          })\n          .join(\"&\") +\n        \"&time=\" +\n        Date.now();\n    };\n\n    // Customers can overwrite their hostname, here we check for that\n    var overwrittenHostname =\n      overwriteOptions.hostname || attr(scriptElement, \"hostname\");\n    var definedHostname = overwrittenHostname || locationHostname;\n\n    var basePayload = {\n      version: version,\n      hostname: definedHostname,\n    };\n\n\n    /////////////////////\n    // INITIALIZE VALUES\n    //\n\n\n\n    /////////////////////\n    // GET SETTINGS\n    //\n\n    // Script mode, this can be hash mode for example\n    var mode = overwriteOptions.mode || attr(scriptElement, \"mode\");\n\n\n\n\n\n\n\n\n\n    // This code could error on (incomplete) implementations, that's why we use try...catch\n    var timezone;\n    try {\n      // c = countries\n      timezone = collectMetricByString(\"c\")\n        ? Intl.DateTimeFormat().resolvedOptions().timeZone\n        : undefinedVar;\n    } catch (error) {\n      warn(error);\n    }\n\n    /////////////////////\n    // PAYLOAD FOR BOTH PAGE VIEWS AND EVENTS\n    //\n\n    var bot = isBotAgent;\n\n    // t = timeonpage, scro = scrolled\n    var collectDataOnLeave =\n      collectMetricByString(\"t\") || collectMetricByString(\"scro\");\n\n    if (bot) basePayload.bot = trueVar;\n\n    var payload = assign(basePayload, {\n      // us = useragent\n      ua: collectMetricByString(\"us\") ? userAgent : undefinedVar,\n\n      https: loc.protocol == https,\n      timezone: timezone,\n      page_id: collectDataOnLeave ? uuid() : undefinedVar,\n\n      // se = sessions\n      session_id: collectMetricByString(\"se\") ? uuid() : undefinedVar,\n    });\n\n    payload.sri = falseVar;\n\n    // Use User-Agent Client Hints for better privacy\n    // https://web.dev/user-agent-client-hints/\n    if (uaData) {\n      payload.mobile = uaData.mobile;\n      payload.brands = stringify(uaData.brands);\n    }\n\n    /////////////////////\n    // ADD WARNINGS\n    //\n\n\n\n    // When a customer overwrites the hostname, we need to know what the original\n    // hostname was to hide that domain from referrer traffic\n    if (definedHostname !== locationHostname)\n      payload.hostname_original = locationHostname;\n\n    // Don't track when Do Not Track is set to true\n    if (doNotTrack in nav && nav[doNotTrack] == \"1\")\n      return warn(\n        notSendingWhen + doNotTrack + \" is enabled. See \" + docsUrl + \"/dnt\"\n      );\n\n    // Warn when sending from localhost and not having a hostname set\n    if (\n      (locationHostname.indexOf(\".\") == -1 ||\n        /^[0-9.:]+$/.test(locationHostname)) &&\n      !overwrittenHostname\n    )\n      warn(\n        \"Set hostname on \" +\n          locationHostname +\n          \". See \" +\n          docsUrl +\n          \"/overwrite-domain-name\"\n      );\n\n    /////////////////////\n    // SETUP INITIAL VARIABLES\n    //\n\n    var page = {};\n    var lastSendPath;\n\n    // We don't want to end up with sensitive data so we clean the referrer URL\n    var referrer =\n      (doc.referrer || \"\")\n        .replace(locationHostname, definedHostname)\n        .replace(/^https?:\\/\\/((m|l|w{2,3}([0-9]+)?)\\.)?([^?#]+)(.*)$/, \"$4\")\n        .replace(/^([^/]+)$/, \"$1\") || undefinedVar;\n\n    /////////////////////\n    // TIME ON PAGE AND SCROLLED LOGIC\n    //\n\n    // We don't put msHidden in if duration block, because it's used outside of that functionality\n    var msHidden = 0;\n\n    var sendOnLeave = function (id, push) {\n      if (!collectDataOnLeave) return;\n\n      var append = assign(basePayload, {\n        type: \"append\",\n        original_id: push ? id : payload.page_id,\n      });\n\n\n\n      if (push || !nav.sendBeacon) {\n        // sendData will assign payload to request\n        sendData(append, undefinedVar, trueVar);\n      } else {\n        nav.sendBeacon(fullApiUrl + \"/append\", stringify(append));\n      }\n    };\n\n\n    addEventListenerFunc(pagehide, sendOnLeave, falseVar);\n\n\n    /////////////////////\n    // ACTUAL PAGE VIEW LOGIC\n    //\n\n    var getPath = function (overwrite) {\n      var path = \"\";\n\n      // decodeURIComponent can fail when having invalid characters\n      // https://github.com/simpleanalytics/roadmap/issues/462\n      try {\n        path = overwrite || decodeURIComponentFunc(loc.pathname);\n      } catch (error) {\n        warn(error);\n      }\n\n\n\n\n      return path;\n    };\n\n    // Send page view and append data to it\n    var sendPageView = function (\n      isPushState,\n      deleteSourceInfo,\n      sameSite,\n      metadata\n    ) {\n      if (isPushState) sendOnLeave(\"\" + payload.page_id, trueVar);\n      if (collectDataOnLeave) payload.page_id = uuid();\n\n      var currentPage = definedHostname + getPath();\n\n      sendData({\n        id: payload.page_id,\n        type: pageviewText,\n        referrer: !deleteSourceInfo || sameSite ? referrer : null,\n        query: getQueryParams(deleteSourceInfo),\n\n      });\n\n      referrer = currentPage;\n    };\n\n    var pageview = function (isPushState, pathOverwrite, metadata) {\n      // Obfuscate personal data in URL by dropping the search and hash\n      var path = getPath(pathOverwrite);\n\n      // Don't send the last path again (this could happen when pushState is used to change the path hash or search)\n      if (!path || lastSendPath == path) return;\n\n      lastSendPath = path;\n      page.path = path;\n\n\n      // l = language\n      if (collectMetricByString(\"l\")) {\n        if (nav[language]) page[language] = nav[language];\n      }\n\n\n      // If a user does refresh we need to delete the referrer because otherwise it count double\n      var perf = window.performance;\n      var navigationText = \"navigation\";\n\n      // Check if back, forward or reload buttons are being used in modern browsers\n      var performaceEntryType;\n      try {\n        performaceEntryType = perf.getEntriesByType(navigationText)[0].type;\n      } catch (error) {\n        warn(error);\n      }\n\n      var userNavigated = performaceEntryType\n        ? [\"reload\", \"back_forward\"].indexOf(performaceEntryType) > -1\n        : // Check if back, forward or reload buttons are being use in older browsers\n          // 1: TYPE_RELOAD, 2: TYPE_BACK_FORWARD\n          perf &&\n          perf[navigationText] &&\n          [1, 2].indexOf(perf[navigationText].type) > -1;\n\n      // Check if referrer is the same as current real hostname (not the defined hostname!)\n      var sameSite = referrer\n        ? doc.referrer.split(slash)[2] == locationHostname\n        : falseVar;\n\n\n\n      var triggerSendPageView = function () {\n        fetchedHighEntropyValues = trueVar;\n        sendPageView(\n          isPushState,\n          isPushState || userNavigated || !collectMetricByString(\"r\"), // r = referrers\n          sameSite,\n          metadata\n        );\n      };\n\n      if (!fetchedHighEntropyValues) {\n        // Request platform information if this is available\n        try {\n          if (uaData && isFunction(uaData.getHighEntropyValues)) {\n            uaData\n              .getHighEntropyValues([platformText, platformVersionText])\n              .then(function (highEntropyValues) {\n                payload.os_name = highEntropyValues[platformText];\n                payload.os_version = highEntropyValues[platformVersionText];\n                triggerSendPageView();\n              })\n              .catch(triggerSendPageView);\n          } else {\n            triggerSendPageView();\n          }\n        } catch (e) {\n          triggerSendPageView();\n        }\n      } else {\n        triggerSendPageView();\n      }\n    };\n\n\n\n    pageview();\n\n  } catch (e) {\n    warn(e);\n  }\n})(\n  window,\n  {},\n  \"simpleanalyticscdn.com\",\n  \"queue.\",\n  \"cdn_light_10\",\n  \"sa\"\n);\n"],"names":["window","overwriteOptions","baseUrl","warn","undefinedVar","undefined","https","con","console","doNotTrack","nav","navigator","loc","location","locationHostname","host","doc","document","userAgent","notSending","fetchedHighEntropyValues","encodeURIComponentFunc","encodeURIComponent","decodeURIComponentFunc","decodeURIComponent","stringify","JSON","addEventListenerFunc","addEventListener","fullApiUrl","protocol","language","documentElement","uaData","userAgentData","platformText","platformVersionText","docsUrl","isBotAgent","test","scriptElement","currentScript","querySelector","args","slice","call","arguments","unshift","Function","prototype","bind","apply","attr","attribute","getAttribute","assign","obj","prop","object","to","arg","index","length","nextSource","constructor","Object","nextKey","hasOwnProperty","sa_settings","Date","now","uuid","cryptoObject","crypto","msCrypto","emptyUUID","uuidRegex","replace","c","getRandomValues","Uint8Array","toString","error","r","Math","random","namespaceText","namespace","strictUtm","loadedVariable","sa_event_loaded","timezone","sendData","data","callback","onlyThisData","payload","page","brave","Image","src","keys","filter","key","map","join","overwrittenHostname","hostname","definedHostname","basePayload","version","mode","Intl","DateTimeFormat","resolvedOptions","timeZone","bot","ua","page_id","session_id","sri","mobile","brands","hostname_original","indexOf","lastSendPath","referrer","sendOnLeave","id","push","append","type","original_id","sendBeacon","getPath","overwrite","path","pathname","sendPageView","isPushState","deleteSourceInfo","sameSite","metadata","ignoreSource","currentPage","query","search","split","keyValue","RegExp","pathOverwrite","performaceEntryType","perf","performance","navigationText","getEntriesByType","userNavigated","triggerSendPageView","getHighEntropyValues","then","highEntropyValues","os_name","os_version","catch","e","pageview"],"mappings":"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"}