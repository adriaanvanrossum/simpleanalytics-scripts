{"version":3,"file":"light.source.js","sources":["light.source.js"],"sourcesContent":["/* eslint-env browser */\n\n(function (window, overwriteOptions, baseUrl, apiUrlPrefix, version, saGlobal) {\n  if (!window) return;\n  try {\n    /////////////////////\n    // PREDEFINED VARIABLES FOR BETTER MINIFICATION\n    //\n\n    // This seems like a lot of repetition, but it makes our script available for\n    // multple destination which prevents us to need multiple scripts. The minified\n    // version stays small.\n    var https = \"https:\";\n    var pageviewsText = \"pageview\";\n    var protocol = https + \"//\";\n    var con = window.console;\n    var doNotTrack = \"doNotTrack\";\n    var slash = \"/\";\n    var nav = window.navigator;\n    var loc = window.location;\n    var locationHostname = loc.hostname;\n    var doc = window.document;\n    var userAgent = nav.userAgent;\n    var notSending = \"Not sending request \";\n    var encodeURIComponentFunc = encodeURIComponent;\n    var decodeURIComponentFunc = decodeURIComponent;\n    var stringify = JSON.stringify;\n    var thousand = 1000;\n    var addEventListenerFunc = window.addEventListener;\n    var fullApiUrl = protocol + apiUrlPrefix + baseUrl;\n    var undefinedVar = undefined;\n    var documentElement = doc.documentElement || {};\n    var language = \"language\";\n    var Height = \"Height\";\n    var Width = \"Width\";\n    var scroll = \"scroll\";\n    var uaData = nav.userAgentData;\n    var scrollHeight = scroll + Height;\n    var offsetHeight = \"offset\" + Height;\n    var clientHeight = \"client\" + Height;\n    var clientWidth = \"client\" + Width;\n    var pagehide = \"pagehide\";\n    var isBotAgent =\n      /(bot|spider|crawl)/i.test(userAgent) && !/(cubot)/i.test(userAgent);\n\n    /////////////////////\n    // PAYLOAD FOR BOTH PAGE VIEWS AND EVENTS\n    //\n\n    var bot = isBotAgent;\n\n    var payload = {\n      version: version,\n    };\n    if (bot) payload.bot = true;\n\n    // Use User-Agent Client Hints for better privacy\n    // https://web.dev/user-agent-client-hints/\n    if (uaData) {\n      try {\n        payload.mobile = uaData.mobile;\n        var brand = uaData.brands.slice(-1)[0];\n        payload.browser = brand.brand;\n        payload.browserVersion = brand.version;\n      } catch (e) {\n        // Do nothing\n      }\n    }\n\n    /////////////////////\n    // HELPER FUNCTIONS\n    //\n\n    // A simple log function so the user knows why a request is not being send\n    var warn = function (message) {\n      if (con && con.warn) con.warn(\"Simple Analytics:\", message);\n    };\n\n    var now = Date.now;\n\n    var uuid = function () {\n      var cryptoObject = window.crypto || window.msCrypto;\n      var emptyUUID = [1e7] + -1e3 + -4e3 + -8e3 + -1e11;\n      var uuidRegex = /[018]/g;\n\n      try {\n        return emptyUUID.replace(uuidRegex, function (c) {\n          return (\n            c ^\n            (cryptoObject.getRandomValues(new Uint8Array(1))[0] &\n              (15 >> (c / 4)))\n          ).toString(16);\n        });\n      } catch (error) {\n        return emptyUUID.replace(uuidRegex, function (c) {\n          var r = (Math.random() * 16) | 0,\n            v = c < 2 ? r : (r & 0x3) | 0x8;\n          return v.toString(16);\n        });\n      }\n    };\n\n    var assign = function () {\n      var to = {};\n      var arg = arguments;\n      for (var index = 0; index < arg.length; index++) {\n        var nextSource = arg[index];\n        if (nextSource) {\n          for (var nextKey in nextSource) {\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n      return to;\n    };\n\n    var isBoolean = function (value) {\n      return !!value === value;\n    };\n\n    var getParams = function (regex) {\n      // From the search we grab the utm_source and ref and save only that\n      var matches = loc.search.match(\n        new RegExp(\"[?&](\" + regex + \")=([^?&]+)\", \"gi\")\n      );\n      var match = matches\n        ? matches.map(function (m) {\n            return m.split(\"=\")[1];\n          })\n        : [];\n      if (match && match[0]) return match[0];\n    };\n\n\n    /////////////////////\n    // SEND DATA VIA OUR PIXEL\n    //\n\n    // Send data via image\n    var sendData = function (data, callback) {\n      data = assign(payload, data);\n      var image = new Image();\n      image.src =\n        fullApiUrl +\n        \"/simple.gif?\" +\n        Object.keys(data)\n          .filter(function (key) {\n            return data[key] != undefinedVar;\n          })\n          .map(function (key) {\n            return (\n              encodeURIComponentFunc(key) +\n              \"=\" +\n              encodeURIComponentFunc(data[key])\n            );\n          })\n          .join(\"&\");\n    };\n\n\n    /////////////////////\n    // INITIALIZE VALUES\n    //\n\n\n\n\n    // This code could error on (incomplete) implementations, that's why we use try...catch\n    var timezone;\n    try {\n      timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n    } catch (e) {\n      /* Do nothing */\n    }\n\n    /////////////////////\n    // GET SETTINGS\n    //\n\n    // Find the script element where options can be set on\n    var scriptElement = doc.querySelector('script[src*=\"' + baseUrl + '\"]');\n    var attr = function (scriptElement, attribute) {\n      return scriptElement && scriptElement.getAttribute(\"data-\" + attribute);\n    };\n\n    // Script mode, this can be hash mode for example\n    var mode = overwriteOptions.mode || attr(scriptElement, \"mode\");\n\n\n    // Customers can overwrite their hostname, here we check for that\n    var definedHostname =\n      overwriteOptions.hostname ||\n      attr(scriptElement, \"hostname\") ||\n      locationHostname;\n\n\n\n\n    /////////////////////\n    // ADD HOSTNAME TO PAYLOAD\n    //\n\n    payload.hostname = definedHostname;\n\n    /////////////////////\n    // ADD WARNINGS\n    //\n\n\n    // When a customer overwrites the hostname, we need to know what the original\n    // hostname was to hide that domain from referrer traffic\n    if (definedHostname !== locationHostname)\n      payload.hostname_original = locationHostname;\n\n    // Don't track when Do Not Track is set to true\n    if (doNotTrack in nav && nav[doNotTrack] == \"1\")\n      return warn(notSending + \"when \" + doNotTrack + \" is enabled\");\n\n    // Don't track when localhost or when it's an IP address\n    if (\n      locationHostname.indexOf(\".\") == -1 ||\n      /^[0-9]+$/.test(locationHostname.replace(/\\./g, \"\"))\n    )\n      return warn(notSending + \"from \" + locationHostname);\n\n    /////////////////////\n    // SETUP INITIAL VARIABLES\n    //\n\n    var page = {};\n    var lastPageId = uuid();\n    var lastSendPath;\n\n    // We don't want to end up with sensitive data so we clean the referrer URL\n    var referrer =\n      (doc.referrer || \"\")\n        .replace(locationHostname, definedHostname)\n        .replace(/^https?:\\/\\/((m|l|w{2,3}([0-9]+)?)\\.)?([^?#]+)(.*)$/, \"$4\")\n        .replace(/^([^/]+)$/, \"$1\") || undefinedVar;\n\n    // The prefix utm_ is optional\n    var utmRegexPrefix = \"(utm_)?\";\n    var source = {\n      source: getParams(utmRegexPrefix + \"source|ref\"),\n      medium: getParams(utmRegexPrefix + \"medium\"),\n      campaign: getParams(utmRegexPrefix + \"campaign\"),\n      term: getParams(utmRegexPrefix + \"term\"),\n      content: getParams(utmRegexPrefix + \"content\"),\n      referrer: referrer,\n    };\n\n    /////////////////////\n    // TIME ON PAGE AND SCROLLED LOGIC\n    //\n\n    // We don't put msHidden in if duration block, because it's used outside of that functionality\n    var msHidden = 0;\n\n    var sendBeaconText = \"sendBeacon\";\n\n    var sendOnLeave = function (id, push) {\n      var append = { type: \"append\", original_id: push ? id : lastPageId };\n\n\n\n      if (push || !(sendBeaconText in nav)) {\n        sendData(append);\n      } else {\n        nav[sendBeaconText](\n          fullApiUrl + \"/append\",\n          stringify(assign(payload, append))\n        );\n      }\n    };\n\n\n    addEventListenerFunc(pagehide, sendOnLeave, false);\n\n\n    /////////////////////\n    // ACTUAL PAGE VIEW LOGIC\n    //\n\n    var getPath = function (overwrite) {\n      var path = \"\";\n\n      // decodeURIComponent can fail when having invalid characters\n      // https://github.com/simpleanalytics/roadmap/issues/462\n      try {\n        path = overwrite || decodeURIComponentFunc(loc.pathname);\n      } catch (e) {\n        // Do nothing\n      }\n\n\n\n      return path;\n    };\n\n    // Send page view and append data to it\n    var sendPageView = function (isPushState, deleteSourceInfo, sameSite) {\n      if (isPushState) sendOnLeave(\"\" + lastPageId, true);\n      lastPageId = uuid();\n      page.id = lastPageId;\n\n      var currentPage = definedHostname + getPath();\n\n      sendData(\n        assign(\n          page,\n          deleteSourceInfo\n            ? {\n                referrer: sameSite ? referrer : null,\n              }\n            : source,\n          {\n            https: loc.protocol == https,\n            timezone: timezone,\n            type: pageviewsText,\n          }\n        )\n      );\n\n      referrer = currentPage;\n    };\n\n    var pageview = function (isPushState, pathOverwrite) {\n      // Obfuscate personal data in URL by dropping the search and hash\n      var path = getPath(pathOverwrite);\n\n      // Don't send the last path again (this could happen when pushState is used to change the path hash or search)\n      if (!path || lastSendPath == path) return;\n\n      lastSendPath = path;\n\n      var data = {\n        path: path,\n      };\n\n      if (nav[language]) data[language] = nav[language];\n\n\n      // If a user does refresh we need to delete the referrer because otherwise it count double\n      var perf = window.performance;\n      var navigation = \"navigation\";\n\n      // Check if back, forward or reload buttons are being used in modern browsers\n      var userNavigated =\n        perf &&\n        perf.getEntriesByType &&\n        perf.getEntriesByType(navigation)[0] &&\n        perf.getEntriesByType(navigation)[0].type\n          ? [\"reload\", \"back_forward\"].indexOf(\n              perf.getEntriesByType(navigation)[0].type\n            ) > -1\n          : // Check if back, forward or reload buttons are being use in older browsers\n            // 1: TYPE_RELOAD, 2: TYPE_BACK_FORWARD\n            perf &&\n            perf[navigation] &&\n            [1, 2].indexOf(perf[navigation].type) > -1;\n\n      // Check if referrer is the same as current hostname\n      var sameSite = referrer\n        ? referrer.split(slash)[0] == definedHostname\n        : false;\n\n\n      page = data;\n\n      sendPageView(isPushState, isPushState || userNavigated, sameSite);\n    };\n\n\n\n    pageview();\n\n  } catch (e) {\n    warn(e);\n  }\n})(\n  window,\n  {},\n  \"<!--# echo var="http_host" default="" -->\",\n  \"\",\n  \"cdn_light_5\",\n  \"sa_event\"\n);\n"],"names":["window","overwriteOptions","baseUrl","isPushState","pathOverwrite","data","perf","navigation","userNavigated","sameSite","path","https","con","console","doNotTrack","nav","navigator","loc","location","locationHostname","hostname","doc","document","userAgent","notSending","encodeURIComponentFunc","encodeURIComponent","decodeURIComponentFunc","decodeURIComponent","stringify","JSON","addEventListenerFunc","addEventListener","fullApiUrl","undefinedVar","undefined","language","documentElement","uaData","userAgentData","isBotAgent","test","payload","version","bot","mobile","brand","brands","slice","browser","browserVersion","e","timezone","warn","message","uuid","Date","now","cryptoObject","crypto","msCrypto","emptyUUID","uuidRegex","replace","c","getRandomValues","Uint8Array","toString","error","r","Math","random","assign","to","arg","arguments","index","length","nextSource","nextKey","Object","prototype","hasOwnProperty","call","getParams","regex","matches","search","match","RegExp","map","m","split","sendData","callback","Image","src","keys","filter","key","join","Intl","DateTimeFormat","resolvedOptions","timeZone","scriptElement","querySelector","attr","attribute","getAttribute","definedHostname","mode","hostname_original","indexOf","lastSendPath","page","lastPageId","referrer","utmRegexPrefix","source","medium","campaign","term","content","sendBeaconText","sendOnLeave","id","push","append","type","original_id","getPath","overwrite","pathname","performance","getEntriesByType","deleteSourceInfo","currentPage","protocol","sendPageView"],"mappings":"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"}