{"version":3,"file":"light.source.js","sources":["light.source.js"],"sourcesContent":["/* eslint-env browser */\n\n(function (\n  window,\n  overwriteOptions,\n  baseUrl,\n  apiUrlPrefix,\n  version,\n  defaultNamespace,\n  sendError\n) {\n  try {\n    /////////////////////\n    // PREDEFINED VARIABLES FOR BETTER MINIFICATION\n    //\n\n    // This seems like a lot of repetition, but it makes our script available for\n    // multple destination which prevents us to need multiple scripts. The minified\n    // version stays small.\n    var undefinedVar = undefined;\n    var trueVar = true;\n    var falseVar = false;\n    var trueText = \"true\";\n    var https = \"https:\";\n    var pageviewText = \"pageview\";\n    var eventText = \"event\";\n    var slash = \"/\";\n    var protocol = https + \"//\";\n    var con = window.console;\n    var doNotTrack = \"doNotTrack\";\n    var nav = window.navigator;\n    var loc = window.location;\n    var locationHostname = loc.host;\n    var doc = window.document;\n    var userAgent = nav.userAgent;\n    var notSending = \"Not sending request \";\n    var fetchedHighEntropyValues = falseVar;\n    var encodeURIComponentFunc = encodeURIComponent;\n    var decodeURIComponentFunc = decodeURIComponent;\n    var stringify = JSON.stringify;\n    var thousand = 1000;\n    var addEventListenerFunc = window.addEventListener;\n    var fullApiUrl = protocol + apiUrlPrefix + baseUrl;\n    var documentElement = doc.documentElement || {};\n    var language = \"language\";\n    var Height = \"Height\";\n    var Width = \"Width\";\n    var scroll = \"scroll\";\n    var uaData = nav.userAgentData;\n    var scrollHeight = scroll + Height;\n    var offsetHeight = \"offset\" + Height;\n    var clientHeight = \"client\" + Height;\n    var clientWidth = \"client\" + Width;\n    var pagehide = \"pagehide\";\n    var platformText = \"platform\";\n    var platformVersionText = \"platformVersion\";\n    var docsUrl = \"https://docs.simpleanalytics.com\";\n    var isBotAgent =\n      /(bot|spider|crawl)/i.test(userAgent) && !/(cubot)/i.test(userAgent);\n\n    // Find the script element where options can be set on\n    var scriptElement =\n      doc.currentScript || doc.querySelector('script[src*=\"' + baseUrl + '\"]');\n\n    /////////////////////\n    // HELPER FUNCTIONS\n    //\n\n    // A simple log function so the user knows why a request is not being send\n    var warn = function (message) {\n      if (con && con.warn) con.warn(\"Simple Analytics:\", message);\n    };\n\n    var hasProp = function (obj, prop) {\n      return Object.prototype.hasOwnProperty.call(obj, prop);\n    };\n\n    var isString = function (string) {\n      return typeof string == \"string\";\n    };\n\n    var attr = function (scriptElement, attribute) {\n      return scriptElement && scriptElement.getAttribute(\"data-\" + attribute);\n    };\n\n    var convertCommaSeparatedToArray = function (csv) {\n      return Array.isArray(csv)\n        ? csv\n        : isString(csv) && csv.length\n        ? csv.split(/, ?/)\n        : [];\n    };\n\n\n    var collectMetricByString = function (metricAbbreviation) {\n      return true;\n    };\n\n    var now = Date.now;\n\n    var uuid = function () {\n      var cryptoObject = window.crypto || window.msCrypto;\n      var emptyUUID = [1e7] + -1e3 + -4e3 + -8e3 + -1e11;\n      var uuidRegex = /[018]/g;\n\n      try {\n        return emptyUUID.replace(uuidRegex, function (c) {\n          return (\n            c ^\n            (cryptoObject.getRandomValues(new Uint8Array(1))[0] &\n              (15 >> (c / 4)))\n          ).toString(16);\n        });\n      } catch (error) {\n        return emptyUUID.replace(uuidRegex, function (c) {\n          var r = (Math.random() * 16) | 0,\n            v = c < 2 ? r : (r & 0x3) | 0x8;\n          return v.toString(16);\n        });\n      }\n    };\n\n    var isFunction = function (func) {\n      return typeof func == \"function\";\n    };\n\n    var isObject = function (object) {\n      return object && object.constructor === Object;\n    };\n\n    var assign = function () {\n      var to = {};\n      var arg = arguments;\n      for (var index = 0; index < arg.length; index++) {\n        var nextSource = arg[index];\n        if (isObject(nextSource)) {\n          for (var nextKey in nextSource) {\n            if (hasProp(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n      return to;\n    };\n\n    // Define namespace for the library\n    var namespaceText = \"namespace\";\n    var namespace =\n      overwriteOptions[namespaceText] ||\n      attr(scriptElement, namespaceText) ||\n      defaultNamespace;\n\n\n    var isBoolean = function (value) {\n      return !!value === value;\n    };\n\n    // By default we allow source, medium in the URLs. With strictUtm enabled\n    // we only allow it with the utm_ prefix: utm_source, utm_medium, ...\n    var strictUtm =\n      overwriteOptions.strictUtm ||\n      attr(scriptElement, \"strict-utm\") == trueText;\n\n    var getQueryParams = function (ignoreSource) {\n      return (\n        loc.search\n          .slice(1)\n          .split(\"&\")\n          .filter(function (keyValue) {\n            var ignore = ignoreSource || !collectMetricByString(\"ut\");\n\n            if (ignore) return falseVar;\n            var regex =\n              \"^((utm_)\" +\n              (strictUtm ? \"\" : \"?\") +\n              \"(source|medium|content|term|campaign)\" +\n              (strictUtm ? \"\" : \"|ref\");\n            (\")=\");\n\n            // The prefix \"utm_\" is optional with \"strictUtm\" disabled\n            // \"ref\" is only collected when \"strictUtm\" is disabled\n            return new RegExp(regex).test(keyValue);\n          })\n          .join(\"&\") || undefinedVar\n      );\n    };\n\n\n    /////////////////////\n    // Warn when using script twice\n    //\n\n    // Only load our script once, customers can still send multiple page views\n    // with the sa_pageview function if they turn off auto collect.\n    var loadedVariable = namespace + \"_loaded\";\n    if (window[loadedVariable] == trueVar) return warn(notSending + \"twice\");\n    window.sa_event_loaded = trueVar;\n    window[loadedVariable] = trueVar;\n\n    /////////////////////\n    // SEND DATA VIA OUR PIXEL\n    //\n\n    // Send data via image\n    var sendData = function (data, callback, onlyThisData) {\n      return braveCallback(function (isBrave) {\n        data = onlyThisData ? data : assign(payload, page, data);\n\n        if (isBrave && !onlyThisData) data.brave = trueVar;\n\n\n        var image = new Image();\n        image.src =\n          fullApiUrl +\n          \"/simple.gif?\" +\n          Object.keys(data)\n            .filter(function (key) {\n              return data[key] != undefinedVar;\n            })\n            .map(function (key) {\n              return (\n                encodeURIComponentFunc(key) +\n                \"=\" +\n                encodeURIComponentFunc(data[key])\n              );\n            })\n            .join(\"&\") +\n          \"&time=\" +\n          Date.now();\n      });\n    };\n\n\n    /////////////////////\n    // INITIALIZE VALUES\n    //\n\n\n\n    /////////////////////\n    // GET SETTINGS\n    //\n\n    // Script mode, this can be hash mode for example\n    var mode = overwriteOptions.mode || attr(scriptElement, \"mode\");\n\n\n    // Customers can overwrite their hostname, here we check for that\n    var overwrittenHostname =\n      overwriteOptions.hostname || attr(scriptElement, \"hostname\");\n    var definedHostname = overwrittenHostname || locationHostname;\n\n\n\n\n\n\n\n\n    var braveCallback = function (callback) {\n      if (!nav.brave) callback(falseVar);\n      else\n        nav.brave\n          .isBrave()\n          .then(function () {\n            callback(trueVar);\n          })\n          .catch(function () {\n            callback(falseVar);\n          });\n    };\n\n    // This code could error on (incomplete) implementations, that's why we use try...catch\n    var timezone;\n    try {\n      // c = countries\n      timezone = collectMetricByString(\"c\")\n        ? Intl.DateTimeFormat().resolvedOptions().timeZone\n        : undefinedVar;\n    } catch (e) {\n      /* Do nothing */\n    }\n\n    /////////////////////\n    // PAYLOAD FOR BOTH PAGE VIEWS AND EVENTS\n    //\n\n    var bot = isBotAgent;\n\n    // t = timeonpage, scro = scrolled\n    var collectDataOnLeave =\n      collectMetricByString(\"t\") || collectMetricByString(\"scro\");\n\n    var payload = {\n      version: version,\n      // us = useragent\n      ua: collectMetricByString(\"us\") ? userAgent : undefinedVar,\n      https: loc.protocol == https,\n      timezone: timezone,\n      hostname: definedHostname,\n      page_id: collectDataOnLeave ? uuid() : undefinedVar,\n      // se = sessions\n      session_id: collectMetricByString(\"se\") ? uuid() : undefinedVar,\n    };\n    if (bot) payload.bot = trueVar;\n\n    payload.sri = falseVar;\n\n    // Use User-Agent Client Hints for better privacy\n    // https://web.dev/user-agent-client-hints/\n    if (uaData) {\n      payload.mobile = uaData.mobile;\n      payload.brands = stringify(uaData.brands);\n    }\n\n    /////////////////////\n    // ADD WARNINGS\n    //\n\n\n\n    // When a customer overwrites the hostname, we need to know what the original\n    // hostname was to hide that domain from referrer traffic\n    if (definedHostname !== locationHostname)\n      payload.hostname_original = locationHostname;\n\n    // Don't track when Do Not Track is set to true\n    if (doNotTrack in nav && nav[doNotTrack] == \"1\")\n      return warn(\n        notSending +\n          \"when \" +\n          doNotTrack +\n          \" is enabled. See \" +\n          docsUrl +\n          \"/dnt\"\n      );\n\n    // Warn when sending from localhost and not having a hostname set\n    if (\n      (locationHostname.indexOf(\".\") == -1 ||\n        /^[0-9.:]+$/.test(locationHostname)) &&\n      !overwrittenHostname\n    )\n      warn(\n        \"Set hostname on \" +\n          locationHostname +\n          \". See \" +\n          docsUrl +\n          \"/overwrite-domain-name\"\n      );\n\n    /////////////////////\n    // SETUP INITIAL VARIABLES\n    //\n\n    var page = {};\n    var lastSendPath;\n\n    // We don't want to end up with sensitive data so we clean the referrer URL\n    var referrer =\n      (doc.referrer || \"\")\n        .replace(locationHostname, definedHostname)\n        .replace(/^https?:\\/\\/((m|l|w{2,3}([0-9]+)?)\\.)?([^?#]+)(.*)$/, \"$4\")\n        .replace(/^([^/]+)$/, \"$1\") || undefinedVar;\n\n    /////////////////////\n    // TIME ON PAGE AND SCROLLED LOGIC\n    //\n\n    // We don't put msHidden in if duration block, because it's used outside of that functionality\n    var msHidden = 0;\n\n    var sendOnLeave = function (id, push) {\n      if (!collectDataOnLeave) return;\n\n      var append = {\n        type: \"append\",\n        hostname: definedHostname,\n        original_id: push ? id : payload.page_id,\n      };\n\n\n\n      if (push || !nav.sendBeacon) {\n        // sendData will assign payload to request\n        sendData(append, undefinedVar, trueVar);\n      } else {\n        nav.sendBeacon(fullApiUrl + \"/append\", stringify(append));\n      }\n    };\n\n\n    addEventListenerFunc(pagehide, sendOnLeave, falseVar);\n\n\n    /////////////////////\n    // ACTUAL PAGE VIEW LOGIC\n    //\n\n    var getPath = function (overwrite) {\n      var path = \"\";\n\n      // decodeURIComponent can fail when having invalid characters\n      // https://github.com/simpleanalytics/roadmap/issues/462\n      try {\n        path = overwrite || decodeURIComponentFunc(loc.pathname);\n      } catch (e) {\n        // Do nothing\n      }\n\n\n\n\n      return path;\n    };\n\n    // Send page view and append data to it\n    var sendPageView = function (\n      isPushState,\n      deleteSourceInfo,\n      sameSite,\n      metadata\n    ) {\n      if (isPushState) sendOnLeave(\"\" + payload.page_id, trueVar);\n      if (collectDataOnLeave) payload.page_id = uuid();\n\n      var currentPage = definedHostname + getPath();\n\n      sendData({\n        id: payload.page_id,\n        type: pageviewText,\n        referrer: !deleteSourceInfo || sameSite ? referrer : null,\n        query: getQueryParams(deleteSourceInfo),\n\n      });\n\n      referrer = currentPage;\n    };\n\n    var pageview = function (isPushState, pathOverwrite, metadata) {\n      // Obfuscate personal data in URL by dropping the search and hash\n      var path = getPath(pathOverwrite);\n\n      // Don't send the last path again (this could happen when pushState is used to change the path hash or search)\n      if (!path || lastSendPath == path) return;\n\n      lastSendPath = path;\n      page.path = path;\n\n\n      // l = language\n      if (collectMetricByString(\"l\")) {\n        if (nav[language]) page[language] = nav[language];\n      }\n\n\n      // If a user does refresh we need to delete the referrer because otherwise it count double\n      var perf = window.performance;\n      var navigationText = \"navigation\";\n\n      // Check if back, forward or reload buttons are being used in modern browsers\n      var userNavigated =\n        perf &&\n        perf.getEntriesByType &&\n        perf.getEntriesByType(navigationText)[0] &&\n        perf.getEntriesByType(navigationText)[0].type\n          ? [\"reload\", \"back_forward\"].indexOf(\n              perf.getEntriesByType(navigationText)[0].type\n            ) > -1\n          : // Check if back, forward or reload buttons are being use in older browsers\n            // 1: TYPE_RELOAD, 2: TYPE_BACK_FORWARD\n            perf &&\n            perf[navigationText] &&\n            [1, 2].indexOf(perf[navigationText].type) > -1;\n\n      // Check if referrer is the same as current real hostname (not the defined hostname!)\n      var sameSite = referrer\n        ? doc.referrer.split(slash)[2] == locationHostname\n        : falseVar;\n\n\n\n      var triggerSendPageView = function () {\n        fetchedHighEntropyValues = trueVar;\n        sendPageView(\n          isPushState,\n          isPushState || userNavigated || !collectMetricByString(\"r\"), // r = referrers\n          sameSite,\n          metadata\n        );\n      };\n\n      if (!fetchedHighEntropyValues) {\n        // Request platform information if this is available\n        try {\n          if (uaData && isFunction(uaData.getHighEntropyValues)) {\n            uaData\n              .getHighEntropyValues([platformText, platformVersionText])\n              .then(function (highEntropyValues) {\n                payload.os_name = highEntropyValues[platformText];\n                payload.os_version = highEntropyValues[platformVersionText];\n                triggerSendPageView();\n              })\n              .catch(triggerSendPageView);\n          } else {\n            triggerSendPageView();\n          }\n        } catch (e) {\n          triggerSendPageView();\n        }\n      } else {\n        triggerSendPageView();\n      }\n    };\n\n\n\n    pageview();\n\n  } catch (e) {\n    warn(e);\n  }\n})(\n  window,\n  {},\n  \"<!--# echo var="http_host" default="" -->\",\n  \"\",\n  \"cdn_light_9\",\n  \"sa\"\n);\n"],"names":["window","overwriteOptions","baseUrl","undefinedVar","undefined","falseVar","https","con","console","doNotTrack","nav","navigator","loc","location","locationHostname","host","doc","document","userAgent","notSending","fetchedHighEntropyValues","encodeURIComponentFunc","encodeURIComponent","decodeURIComponentFunc","decodeURIComponent","stringify","JSON","addEventListenerFunc","addEventListener","fullApiUrl","language","documentElement","uaData","userAgentData","platformText","platformVersionText","docsUrl","isBotAgent","test","scriptElement","currentScript","querySelector","warn","message","attr","attribute","getAttribute","uuid","Date","now","cryptoObject","crypto","msCrypto","emptyUUID","uuidRegex","replace","c","getRandomValues","Uint8Array","toString","error","r","Math","random","assign","obj","prop","object","to","arg","arguments","index","length","nextSource","constructor","Object","nextKey","prototype","hasOwnProperty","call","namespaceText","namespace","strictUtm","loadedVariable","sa_event_loaded","timezone","sendData","data","callback","onlyThisData","braveCallback","isBrave","payload","page","brave","Image","src","keys","filter","key","map","join","overwrittenHostname","mode","hostname","definedHostname","then","catch","Intl","DateTimeFormat","resolvedOptions","timeZone","e","bot","version","ua","protocol","page_id","session_id","sri","mobile","brands","hostname_original","indexOf","lastSendPath","referrer","sendOnLeave","id","push","append","type","original_id","sendBeacon","getPath","overwrite","path","pathname","sendPageView","isPushState","deleteSourceInfo","sameSite","metadata","ignoreSource","currentPage","query","search","slice","split","keyValue","RegExp","pathOverwrite","perf","performance","navigationText","userNavigated","getEntriesByType","triggerSendPageView","getHighEntropyValues","highEntropyValues","os_name","os_version","pageview"],"mappings":"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"}