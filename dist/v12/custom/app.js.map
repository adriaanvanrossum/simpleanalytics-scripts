{"version":3,"file":"app.source.js","sources":["app.source.js"],"sourcesContent":["/* eslint-env browser */\n\n(function (\n  window,\n  overwriteOptions,\n  baseUrl,\n  apiUrlPrefix,\n  version,\n  defaultNamespace,\n  sendError,\n  warn\n) {\n  try {\n    /////////////////////\n    // PREDEFINED VARIABLES FOR BETTER MINIFICATION\n    //\n\n    // This seems like a lot of repetition, but it makes our script available for\n    // multple destination which prevents us to need multiple scripts. The minified\n    // version stays small.\n    var undefinedVar = undefined;\n    var trueVar = true;\n    var falseVar = false;\n    var trueText = \"true\";\n    var https = \"https:\";\n    var pageviewText = \"pageview\";\n    var eventText = \"event\";\n    var errorText = \"error\";\n    var slash = \"/\";\n    var protocol = https + \"//\";\n    var con = window.console;\n    var doNotTrack = \"doNotTrack\";\n    var nav = window.navigator;\n    var loc = window.location;\n    var locationHostname = loc.host;\n    var doc = window.document;\n    var userAgent = nav.userAgent;\n    var notSending = \"Not sending request \";\n    var notSendingWhen = notSending + \"when \";\n    var fetchedHighEntropyValues = falseVar;\n    var encodeURIComponentFunc = encodeURIComponent;\n    var decodeURIComponentFunc = decodeURIComponent;\n    var stringify = JSON.stringify;\n    var thousand = 1000;\n    var addEventListenerFunc = window.addEventListener;\n    var fullApiUrl = protocol + apiUrlPrefix + baseUrl;\n    var documentElement = doc.documentElement || {};\n    var language = \"language\";\n    var Height = \"Height\";\n    var Width = \"Width\";\n    var scroll = \"scroll\";\n    var uaData = nav.userAgentData;\n    var scrollHeight = scroll + Height;\n    var offsetHeight = \"offset\" + Height;\n    var clientHeight = \"client\" + Height;\n    var clientWidth = \"client\" + Width;\n    var pagehide = \"pagehide\";\n    var platformText = \"platform\";\n    var platformVersionText = \"platformVersion\";\n    var docsUrl = \"https://docs.simpleanalytics.com\";\n    var pages = 0;\n    var isBotAgent =\n      /(bot|spider|crawl)/i.test(userAgent) && !/(cubot)/i.test(userAgent);\n    var screen = window.screen;\n\n\n    // Find the script element where options can be set on\n    var scriptElement =\n      doc.currentScript || doc.querySelector('script[src*=\"' + baseUrl + '\"]');\n\n    /////////////////////\n    // HELPER FUNCTIONS\n    //\n\n    // A simple log function so the user knows why a request is not being send\n    warn = function () {\n      // 1. Convert args to a normal array\n      var args = [].slice.call(arguments);\n\n      // 2. Prepend log prefix\n      args.unshift(\"Simple Analytics:\");\n\n      // 3. Pass along arguments to console.warn\n      // Function.prototype.apply.call is needed for Internet Explorer\n      return Function.prototype.apply.call(con.warn, con, args);\n    };\n\n    var warnInFunction = function (name, error) {\n      warn(\"Error in your \" + name + \" function:\", error);\n    };\n\n    var hasProp = function (obj, prop) {\n      return Object.prototype.hasOwnProperty.call(obj, prop);\n    };\n\n    var isString = function (string) {\n      return typeof string == \"string\";\n    };\n\n    var filterRegex = function (item) {\n      return item.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n    };\n\n    var attr = function (scriptElement, attribute) {\n      return scriptElement && scriptElement.getAttribute(\"data-\" + attribute);\n    };\n\n    var convertCommaSeparatedToArray = function (csv) {\n      return Array.isArray(csv)\n        ? csv\n        : isString(csv) && csv.length\n        ? csv.split(/, ?/)\n        : [];\n    };\n\n    var isObject = function (object) {\n      return object && object.constructor === Object;\n    };\n\n    var assign = function () {\n      var to = {};\n      var arg = arguments;\n      for (var index = 0; index < arg.length; index++) {\n        var nextSource = arg[index];\n        if (isObject(nextSource)) {\n          for (var nextKey in nextSource) {\n            if (hasProp(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n      return to;\n    };\n\n    var settings = window.sa_settings;\n    var logSettings = settings || Object.keys(overwriteOptions).length;\n\n    // Merge overwriteOptions with sa_settings\n    overwriteOptions = assign(overwriteOptions, settings);\n\n    if (logSettings) warn(\"Settings\", overwriteOptions);\n\n    // Customers can skip data points\n    var ignoreMetrics = convertCommaSeparatedToArray(\n      overwriteOptions.ignoreMetrics || attr(scriptElement, \"ignore-metrics\")\n    );\n\n    var collectMetricByString = function (metricAbbreviation) {\n      // Can't use Array.find() here because we need to support IE9\n      return (\n        ignoreMetrics.filter(function (item) {\n          return new RegExp(\"^\" + metricAbbreviation).test(item);\n        }).length === 0\n      );\n    };\n\n    var now = Date.now;\n\n    var uuid = function () {\n      var cryptoObject = window.crypto || window.msCrypto;\n      var emptyUUID = [1e7] + -1e3 + -4e3 + -8e3 + -1e11;\n      var uuidRegex = /[018]/g;\n\n      try {\n        return emptyUUID.replace(uuidRegex, function (c) {\n          return (\n            c ^\n            (cryptoObject.getRandomValues(new Uint8Array(1))[0] &\n              (15 >> (c / 4)))\n          ).toString(16);\n        });\n      } catch (error) {\n        return emptyUUID.replace(uuidRegex, function (c) {\n          var r = (Math.random() * 16) | 0,\n            v = c < 2 ? r : (r & 0x3) | 0x8;\n          return v.toString(16);\n        });\n      }\n    };\n\n    var isFunction = function (func) {\n      return typeof func == \"function\";\n    };\n\n    // Define namespace for the library\n    var namespaceText = \"namespace\";\n    var namespace =\n      overwriteOptions[namespaceText] ||\n      attr(scriptElement, namespaceText) ||\n      defaultNamespace;\n\n    var metadataObject = window[namespace + \"_metadata\"];\n    var appendMetadata = function (metadata, data) {\n      if (isObject(metadataObject)) metadata = assign(metadata, metadataObject);\n      var metadataCollectorFunction = window[metadataCollector];\n      if (!isFunction(metadataCollectorFunction)) return metadata;\n      try {\n        return assign(\n          metadata,\n          metadataCollectorFunction.call(window, assign(metadata, data))\n        );\n      } catch (error) {\n        warnInFunction(\"metadata\", error);\n      }\n    };\n\n    var isBoolean = function (value) {\n      return !!value === value;\n    };\n\n    // By default we allow source, medium in the URLs. With strictUtm enabled\n    // we only allow it with the utm_ prefix: utm_source, utm_medium, ...\n    var strictUtm =\n      overwriteOptions.strictUtm ||\n      attr(scriptElement, \"strict-utm\") == trueText;\n\n    var getQueryParams = function (ignoreSource) {\n      return (\n        loc.search\n          .slice(1)\n          .split(\"&\")\n          .filter(function (keyValue) {\n            var ignore = ignoreSource || !collectMetricByString(\"ut\");\n\n            var paramsRegexList = allowParams.map(filterRegex).join(\"|\");\n            var regex = ignore\n              ? \"^(\" + paramsRegexList + \")=\"\n              : \"^((utm_)\" +\n                (strictUtm ? \"\" : \"?\") +\n                \"(source|medium|content|term|campaign)\" +\n                (strictUtm ? \"\" : \"|ref\") +\n                \"|\" +\n                paramsRegexList +\n                \")=\";\n            if (ignore && !allowParams.length) return falseVar;\n\n            // The prefix \"utm_\" is optional with \"strictUtm\" disabled\n            // \"ref\" is only collected when \"strictUtm\" is disabled\n            return new RegExp(regex).test(keyValue);\n          })\n          .join(\"&\") || undefinedVar\n      );\n    };\n\n    // Ignore pages specified in data-ignore-pages\n    var shouldIgnore = function (path) {\n      for (var i in ignorePages) {\n        var ignorePageRaw = ignorePages[i];\n        if (!ignorePageRaw) continue;\n\n        // Prepend a slash when it's missing\n        var ignorePage =\n          ignorePageRaw[0] == slash ? ignorePageRaw : slash + ignorePageRaw;\n\n        if (\n          ignorePage === path ||\n          new RegExp(\n            \"^\" + filterRegex(ignorePage).replace(/\\\\\\*/gi, \"(.*)\") + \"$\",\n            \"i\"\n          ).test(path)\n        )\n          return trueVar;\n      }\n      return falseVar;\n    };\n\n    /////////////////////\n    // Warn when using script twice\n    //\n\n    // Only load our script once, customers can still send multiple page views\n    // with the sa_pageview function if they turn off auto collect.\n    var loadedVariable = namespace + \"_loaded\";\n    if (window[loadedVariable] == trueVar) return warn(notSending + \"twice\");\n    window.sa_event_loaded = trueVar;\n    window[loadedVariable] = trueVar;\n\n    /////////////////////\n    // SEND DATA VIA OUR PIXEL\n    //\n\n    // Send data via image\n    var sendData = function (data, callback, onlyThisData) {\n      data = onlyThisData ? data : assign(payload, page, data);\n\n      if (nav.brave && !onlyThisData) data.brave = trueVar;\n      if (nav._duckduckgoloader_ && !onlyThisData) data.duck = trueVar;\n\n\n      var image = new Image();\n      if (callback) {\n        image.onerror = callback;\n        image.onload = callback;\n      }\n      image.src =\n        fullApiUrl +\n        \"/simple.gif?\" +\n        Object.keys(data)\n          .filter(function (key) {\n            return data[key] != undefinedVar;\n          })\n          .map(function (key) {\n            return (\n              encodeURIComponentFunc(key) +\n              \"=\" +\n              encodeURIComponentFunc(data[key])\n            );\n          })\n          .join(\"&\") +\n        \"&time=\" +\n        Date.now();\n    };\n\n    var cleanSubdomain = function (url) {\n      if (!url) return;\n      return url.replace(\n        /^(https?:\\/\\/)?((m|l|w{2,3}([0-9]+)?)\\.)?([^?#]+)(.*)$/,\n        \"$5\"\n      );\n    };\n\n    // Customers can overwrite their hostname, here we check for that\n    var overwrittenHostname = cleanSubdomain(\n      overwriteOptions.hostname || attr(scriptElement, \"hostname\")\n    );\n\n    var definedHostname = cleanSubdomain(\n      overwrittenHostname || locationHostname\n    );\n\n    var basePayload = {\n      version: version,\n      hostname: definedHostname,\n    };\n\n    /////////////////////\n    // ERROR FUNCTIONS\n    //\n\n    // Send errors\n    // no var because it's scoped outside of the try/catch\n    sendError = function (errorOrMessage) {\n      errorOrMessage = errorOrMessage.stack\n        ? errorOrMessage + \" \" + errorOrMessage.stack\n        : errorOrMessage;\n      warn(errorOrMessage);\n      sendData(\n        assign(basePayload, {\n          type: errorText,\n          error: errorOrMessage,\n          path: loc.pathname,\n        }),\n        undefinedVar,\n        trueVar\n      );\n    };\n\n    // We listen for the error events and only send errors that are\n    // from our script (checked by filename) to our server.\n    addEventListenerFunc(\n      errorText,\n      function (event) {\n        if (event.filename && event.filename.indexOf(baseUrl) > -1) {\n          sendError(event.message);\n        }\n      },\n      falseVar\n    );\n\n    /////////////////////\n    // INITIALIZE VALUES\n    //\n\n    var start = now();\n\n    var scrolled = 0;\n\n    /////////////////////\n    // GET SETTINGS\n    //\n\n    // Script mode, this can be hash mode for example\n    var mode = overwriteOptions.mode || attr(scriptElement, \"mode\");\n\n    // Should we record Do Not Track visits?\n    var collectDnt = isBoolean(overwriteOptions.collectDnt)\n      ? overwriteOptions.collectDnt\n      : attr(scriptElement, \"ignore-dnt\") == trueText ||\n        attr(scriptElement, \"skip-dnt\") == trueText ||\n        attr(scriptElement, \"collect-dnt\") == trueText;\n\n    // Some customers want to collect page views manually\n    var autoCollect = !(\n      attr(scriptElement, \"auto-collect\") == \"false\" ||\n      overwriteOptions.autoCollect === falseVar\n    );\n\n    // Event function name\n    var eventFunctionName =\n      overwriteOptions.saGlobal ||\n      attr(scriptElement, \"sa-global\") ||\n      namespace + \"_\" + eventText;\n\n    // Customers can ignore certain pages\n    var ignorePages = convertCommaSeparatedToArray(\n      overwriteOptions.ignorePages || attr(scriptElement, \"ignore-pages\")\n    );\n\n    // Customers can allow params\n    var allowParams = convertCommaSeparatedToArray(\n      overwriteOptions.allowParams || attr(scriptElement, \"allow-params\")\n    );\n\n    // Customers can allow params\n    var nonUniqueHostnames = convertCommaSeparatedToArray(\n      overwriteOptions.nonUniqueHostnames ||\n        attr(scriptElement, \"non-unique-hostnames\")\n    );\n\n    // Customers can overwrite certain values\n    var pathOverwriter =\n      overwriteOptions.pathOverwriter || attr(scriptElement, \"path-overwriter\");\n\n    // Customers can add metadata to events and pageviews via a function\n    var metadataCollector =\n      overwriteOptions.metadataCollector ||\n      attr(scriptElement, \"metadata-collector\");\n\n    // This code could error on (incomplete) implementations, that's why we use try...catch\n    var timezone;\n    try {\n      // c = countries\n      timezone = collectMetricByString(\"c\")\n        ? Intl.DateTimeFormat().resolvedOptions().timeZone\n        : undefinedVar;\n    } catch (error) {\n      warn(error);\n    }\n\n    /////////////////////\n    // PAYLOAD FOR BOTH PAGE VIEWS AND EVENTS\n    //\n\n    var phantom = window.phantom;\n    var bot =\n      nav.webdriver ||\n      window.__nightmare ||\n      window.callPhantom ||\n      window._phantom ||\n      (phantom && !phantom.solana) ||\n      window.__polypane ||\n      window._bot ||\n      isBotAgent ||\n      Math.random() == Math.random();\n\n    // t = timeonpage, scro = scrolled\n    var collectDataOnLeave =\n      collectMetricByString(\"t\") || collectMetricByString(\"scro\");\n\n    if (bot) basePayload.bot = trueVar;\n\n    var payload = assign(basePayload, {\n      // us = useragent\n      ua: collectMetricByString(\"us\") ? userAgent : undefinedVar,\n\n      https: loc.protocol == https,\n      timezone: timezone,\n      page_id: collectDataOnLeave ? uuid() : undefinedVar,\n\n      // se = sessions\n      session_id: collectMetricByString(\"se\") ? uuid() : undefinedVar,\n    });\n\n    payload.sri = trueVar;\n\n    // Use User-Agent Client Hints for better privacy\n    // https://web.dev/user-agent-client-hints/\n    if (uaData) {\n      payload.mobile = uaData.mobile;\n      payload.brands = stringify(uaData.brands);\n    }\n\n    /////////////////////\n    // ADD WARNINGS\n    //\n\n\n    // Warn when no document.doctype is defined (this breaks some documentElement dimensions)\n    if (!doc.doctype) warn(\"Add DOCTYPE html for accurate dimensions\");\n\n    // When a customer overwrites the hostname, we need to know what the original\n    // hostname was to hide that domain from referrer traffic\n    if (definedHostname !== locationHostname)\n      payload.hostname_original = locationHostname;\n\n    // Don't track when Do Not Track is set to true\n    if (!collectDnt && doNotTrack in nav && nav[doNotTrack] == \"1\")\n      return warn(\n        notSendingWhen + doNotTrack + \" is enabled. See \" + docsUrl + \"/dnt\"\n      );\n\n    // Warn when sending from localhost and not having a hostname set\n    if (\n      (locationHostname.indexOf(\".\") == -1 ||\n        /^[0-9.:]+$/.test(locationHostname)) &&\n      !overwrittenHostname\n    )\n      warn(\n        \"Set hostname on \" +\n          locationHostname +\n          \". See \" +\n          docsUrl +\n          \"/overwrite-domain-name\"\n      );\n\n    /////////////////////\n    // SETUP INITIAL VARIABLES\n    //\n\n    var page = {};\n    var lastSendPath;\n\n    var getReferrer = function () {\n      return cleanSubdomain(\n        (doc.referrer || \"\").replace(locationHostname, definedHostname)\n      );\n    };\n\n    // We don't want to end up with sensitive data so we clean the referrer URL\n    var referrer = getReferrer();\n\n    /////////////////////\n    // TIME ON PAGE AND SCROLLED LOGIC\n    //\n\n    // We don't put msHidden in if duration block, because it's used outside of that functionality\n    var msHidden = 0;\n\n    var sendOnLeave = function (id, push) {\n      if (!collectDataOnLeave) return;\n\n      var append = assign(basePayload, {\n        type: \"append\",\n        original_id: push ? id : payload.page_id,\n      });\n\n      // t = timeonpage\n      if (collectMetricByString(\"t\")) {\n        append.duration = Math.round((now() - start - msHidden) / thousand);\n      }\n      msHidden = 0;\n      start = now();\n\n      // scro = scrolled\n      if (collectMetricByString(\"scro\")) {\n        append.scrolled = Math.max(0, scrolled, position());\n      }\n\n      if (push || !nav.sendBeacon) {\n        // sendData will assign payload to request\n        sendData(append, undefinedVar, trueVar);\n      } else {\n        nav.sendBeacon(fullApiUrl + \"/append\", stringify(append));\n      }\n    };\n\n    var hiddenStart;\n    addEventListenerFunc(\n      \"visibilitychange\",\n      function () {\n        if (doc.hidden) {\n          if (!(\"on\" + pagehide in window)) sendOnLeave();\n          hiddenStart = now();\n        } else msHidden += now() - hiddenStart;\n      },\n      falseVar\n    );\n\n    addEventListenerFunc(pagehide, sendOnLeave, falseVar);\n\n    var body = doc.body || {};\n    var position = function () {\n      try {\n        var documentClientHeight = documentElement[clientHeight] || 0;\n        var height = Math.max(\n          body[scrollHeight] || 0,\n          body[offsetHeight] || 0,\n          documentElement[clientHeight] || 0,\n          documentElement[scrollHeight] || 0,\n          documentElement[offsetHeight] || 0\n        );\n        return Math.min(\n          100,\n          Math.round(\n            (100 * ((documentElement.scrollTop || 0) + documentClientHeight)) /\n              height /\n              5\n          ) * 5\n        );\n      } catch (error) {\n        warn(error);\n        return 0;\n      }\n    };\n\n    addEventListenerFunc(\"load\", function () {\n      scrolled = position();\n      addEventListenerFunc(\n        scroll,\n        function () {\n          if (scrolled < position()) scrolled = position();\n        },\n        falseVar\n      );\n    });\n\n    /////////////////////\n    // ACTUAL PAGE VIEW LOGIC\n    //\n\n    var getPath = function (overwrite) {\n      var path = \"\";\n\n      // decodeURIComponent can fail when having invalid characters\n      // https://github.com/simpleanalytics/roadmap/issues/462\n      try {\n        path = overwrite || decodeURIComponentFunc(loc.pathname);\n      } catch (error) {\n        warn(error);\n      }\n\n      var pathOverwriterFunction = window[pathOverwriter];\n      if (isFunction(pathOverwriterFunction)) {\n        try {\n          path = pathOverwriterFunction.call(window, { path: path }) || path;\n        } catch (error) {\n          warnInFunction(\"path\", error);\n        }\n      }\n\n      // Ignore pages specified in data-ignore-pages\n      if (shouldIgnore(path)) {\n        warn(notSendingWhen + \"ignoring \" + path);\n        return;\n      }\n\n      // Add hash to path when script is put in to hash mode\n      if (mode == \"hash\" && loc.hash) path += loc.hash.split(\"?\")[0];\n\n      return path;\n    };\n\n    var previousReferrer;\n\n    // Send page view and append data to it\n    var sendPageView = function (\n      isPushState,\n      deleteSourceInfo,\n      sameSite,\n      metadata\n    ) {\n      if (isPushState) sendOnLeave(\"\" + payload.page_id, trueVar);\n      if (collectDataOnLeave) payload.page_id = uuid();\n\n      var currentPage = definedHostname + getPath();\n\n      sendData({\n        id: payload.page_id,\n        type: pageviewText,\n        referrer: !deleteSourceInfo || sameSite ? referrer : null,\n        query: getQueryParams(deleteSourceInfo),\n\n        metadata: stringify(metadata),\n      });\n\n      previousReferrer = referrer;\n      referrer = currentPage;\n\n      pages++;\n    };\n\n    var sameSite, userNavigated;\n\n    var pageview = function (isPushState, pathOverwrite, metadata) {\n      // Obfuscate personal data in URL by dropping the search and hash\n      var path = getPath(pathOverwrite);\n\n      // Don't send the last path again (this could happen when pushState is used to change the path hash or search)\n      if (!path || lastSendPath == path) return;\n\n      lastSendPath = path;\n      page.path = path;\n\n      // v = viewportsizes\n      if (collectMetricByString(\"v\")) {\n        page.viewport_width =\n          Math.max(documentElement[clientWidth] || 0, window.innerWidth || 0) ||\n          null;\n        page.viewport_height =\n          Math.max(\n            documentElement[clientHeight] || 0,\n            window.innerHeight || 0\n          ) || null;\n      }\n\n      // l = language\n      if (collectMetricByString(\"l\")) {\n        if (nav[language]) page[language] = nav[language];\n      }\n\n      // sc = screensizes\n      if (screen && collectMetricByString(\"sc\")) {\n        page.screen_width = screen.width;\n        page.screen_height = screen.height;\n      }\n\n      // If a user does refresh we need to delete the referrer because otherwise it count double\n      var perf = window.performance;\n      var navigationText = \"navigation\";\n\n      // Check if back, forward or reload buttons are being used in modern browsers\n      var performaceEntryType;\n      try {\n        performaceEntryType = perf.getEntriesByType(navigationText)[0].type;\n      } catch (error) {\n        warn(error);\n      }\n\n      userNavigated = performaceEntryType\n        ? [\"reload\", \"back_forward\"].indexOf(performaceEntryType) > -1\n        : // Check if back, forward or reload buttons are being use in older browsers\n          // 1: TYPE_RELOAD, 2: TYPE_BACK_FORWARD\n          perf &&\n          perf[navigationText] &&\n          [1, 2].indexOf(perf[navigationText].type) > -1;\n\n      // Check if referrer is the same as current real hostname (not the defined hostname!)\n      var currentReferrerHostname = referrer\n        ? referrer.split(slash)[0]\n        : undefinedVar;\n      sameSite = referrer\n        ? nonUniqueHostnames.indexOf(currentReferrerHostname) > -1 ||\n          currentReferrerHostname == locationHostname\n        : falseVar;\n\n      // We set unique variable based on pushstate or back navigation, if no match we check the referrer\n      page.unique =\n        /__cf_/.test(getReferrer()) || isPushState || userNavigated\n          ? falseVar\n          : !sameSite;\n\n      metadata = appendMetadata(metadata, {\n        type: pageviewText,\n        path: page.path,\n      });\n\n      var triggerSendPageView = function () {\n        fetchedHighEntropyValues = trueVar;\n        sendPageView(\n          isPushState,\n          isPushState || userNavigated || !collectMetricByString(\"r\"), // r = referrers\n          sameSite,\n          metadata\n        );\n      };\n\n      if (!fetchedHighEntropyValues) {\n        // Request platform information if this is available\n        try {\n          if (uaData && isFunction(uaData.getHighEntropyValues)) {\n            uaData\n              .getHighEntropyValues([platformText, platformVersionText])\n              .then(function (highEntropyValues) {\n                payload.os_name = highEntropyValues[platformText];\n                payload.os_version = highEntropyValues[platformVersionText];\n                triggerSendPageView();\n              })\n              .catch(triggerSendPageView);\n          } else {\n            triggerSendPageView();\n          }\n        } catch (e) {\n          triggerSendPageView();\n        }\n      } else {\n        triggerSendPageView();\n      }\n    };\n\n    /////////////////////\n    // AUTOMATED PAGE VIEW COLLECTION\n    //\n\n    var his = window.history;\n    var hisPushState = his ? his.pushState : undefinedVar;\n    var dis = window.dispatchEvent;\n    var pushStateText = \"pushState\";\n\n    // Overwrite history pushState function to\n    // allow listening on the pushState event\n    if (autoCollect && hisPushState && Event && dis) {\n      var stateListener = function (type) {\n        var orig = his[type];\n        return function () {\n          var arg = arguments;\n          var rv = orig.apply(this, arg);\n          var event;\n          if (isFunction(Event)) {\n            event = new Event(type);\n          } else {\n            // Fix for IE\n            // https://github.com/simpleanalytics/scripts/issues/8\n            event = doc.createEvent(\"Event\");\n            event.initEvent(type, trueVar, trueVar);\n          }\n          event.arguments = arg;\n          dis(event);\n          return rv;\n        };\n      };\n\n      his.pushState = stateListener(pushStateText);\n\n      addEventListenerFunc(\n        pushStateText,\n        function () {\n          pageview(1);\n        },\n        falseVar\n      );\n\n      addEventListenerFunc(\n        \"popstate\",\n        function () {\n          pageview(1);\n        },\n        falseVar\n      );\n    }\n\n    // When in hash mode, we record a pageview based on the onhashchange function\n    if (autoCollect && mode == \"hash\" && \"onhashchange\" in window) {\n      addEventListenerFunc(\n        \"hashchange\",\n        function () {\n          pageview(1);\n        },\n        falseVar\n      );\n    }\n\n    if (autoCollect) pageview();\n\n    window.sa_pageview = function (path, metadata) {\n      pageview(0, path, metadata);\n    };\n\n\n    /////////////////////\n    // EVENTS\n    //\n\n    var validTypes = [\"string\", \"number\"];\n\n    var sendEvent = function (event, metadata, callbackRaw) {\n      if (!callbackRaw && isFunction(metadata)) callbackRaw = metadata;\n\n      var eventIsFunction = isFunction(event);\n      var callback = isFunction(callbackRaw) ? callbackRaw : function () {};\n      var eventType = typeof event;\n\n      if (validTypes.indexOf(eventType) < 0 && !eventIsFunction) {\n        warnInFunction(eventFunctionName, eventText + \" can't be \" + eventType);\n        return callback();\n      }\n\n      try {\n        if (eventIsFunction) {\n          var eventOutput = event();\n          if (validTypes.indexOf(typeof eventOutput) < 0) {\n            warnInFunction(\n              eventFunctionName,\n              event + \" returns no string: \" + eventOutput\n            );\n            return callback();\n          }\n          event = eventOutput;\n        }\n      } catch (error) {\n        warnInFunction(eventFunctionName, error);\n        return callback();\n      }\n\n      event = (\"\" + event).replace(/[^a-z0-9]+/gi, \"_\").replace(/(^_|_$)/g, \"\");\n\n      var eventParams = { type: eventText, event: event };\n      var firstPage = !userNavigated && pages < 2;\n\n      metadata = appendMetadata(metadata, eventParams);\n\n      if (event) {\n        sendData(\n          assign(eventParams, {\n            id: uuid(),\n            query: getQueryParams(!firstPage),\n            referrer:\n              (firstPage || sameSite) && collectMetricByString(\"r\")\n                ? previousReferrer\n                : null,\n\n            metadata: stringify(metadata),\n          }),\n          callback\n        );\n      }\n    };\n\n    var defaultEventFunc = function (event, metadata, callback) {\n      sendEvent(event, metadata, callback);\n    };\n\n    // Set default function if user didn't define a function\n    if (!window[eventFunctionName])\n      window[eventFunctionName] = defaultEventFunc;\n\n    var eventFunc = window[eventFunctionName];\n\n    // Read queue of the user defined function\n    var queue = eventFunc && eventFunc.q ? eventFunc.q : [];\n\n    // Overwrite user defined function\n    window[eventFunctionName] = defaultEventFunc;\n\n    // Post events from the queue of the user defined function\n    for (var event in queue) {\n      if (hasProp(queue, event)) {\n        Array.isArray(queue[event])\n          ? sendEvent.apply(null, queue[event])\n          : sendEvent(queue[event]);\n      }\n    }\n  } catch (e) {\n    sendError(e);\n  }\n})(\n  window,\n  {},\n  \"<!--# echo var="http_host" default="" -->\",\n  \"\",\n  \"custom_app_12\",\n  \"sa\"\n);\n"],"names":["window","overwriteOptions","baseUrl","sendError","warn","undefinedVar","undefined","trueVar","falseVar","trueText","https","pageviewText","eventText","errorText","con","console","doNotTrack","nav","navigator","loc","location","locationHostname","host","doc","document","userAgent","notSending","notSendingWhen","fetchedHighEntropyValues","encodeURIComponentFunc","encodeURIComponent","decodeURIComponentFunc","decodeURIComponent","stringify","JSON","addEventListenerFunc","addEventListener","fullApiUrl","documentElement","language","Height","scroll","uaData","userAgentData","scrollHeight","offsetHeight","clientHeight","pagehide","platformText","platformVersionText","docsUrl","pages","isBotAgent","test","screen","scriptElement","currentScript","querySelector","args","slice","call","arguments","unshift","Function","prototype","apply","warnInFunction","name","error","hasProp","obj","prop","Object","hasOwnProperty","filterRegex","item","replace","attr","attribute","getAttribute","convertCommaSeparatedToArray","csv","Array","isArray","length","split","isObject","object","constructor","assign","to","arg","index","nextSource","nextKey","settings","sa_settings","logSettings","keys","ignoreMetrics","collectMetricByString","metricAbbreviation","filter","RegExp","now","Date","uuid","cryptoObject","crypto","msCrypto","emptyUUID","uuidRegex","c","getRandomValues","Uint8Array","toString","r","Math","random","isFunction","func","namespaceText","namespace","metadataObject","appendMetadata","metadata","data","metadataCollectorFunction","metadataCollector","strictUtm","getQueryParams","ignoreSource","search","keyValue","ignore","paramsRegexList","allowParams","map","join","regex","loadedVariable","sa_event_loaded","sendData","callback","onlyThisData","payload","page","brave","_duckduckgoloader_","duck","image","Image","onerror","onload","src","key","cleanSubdomain","url","overwrittenHostname","hostname","definedHostname","basePayload","version","errorOrMessage","stack","type","path","pathname","event","filename","indexOf","message","timezone","start","scrolled","mode","collectDnt","value","autoCollect","eventFunctionName","saGlobal","ignorePages","nonUniqueHostnames","pathOverwriter","Intl","DateTimeFormat","resolvedOptions","timeZone","phantom","bot","webdriver","__nightmare","callPhantom","_phantom","solana","__polypane","_bot","collectDataOnLeave","ua","protocol","page_id","session_id","sri","mobile","brands","doctype","hostname_original","lastSendPath","hiddenStart","getReferrer","referrer","msHidden","sendOnLeave","id","push","append","original_id","duration","round","max","position","sendBeacon","hidden","body","documentClientHeight","height","min","scrollTop","previousReferrer","sameSite","userNavigated","getPath","overwrite","pathOverwriterFunction","i","ignorePageRaw","ignorePage","shouldIgnore","hash","pageview","isPushState","pathOverwrite","viewport_width","innerWidth","viewport_height","innerHeight","screen_width","width","screen_height","performaceEntryType","perf","performance","navigationText","getEntriesByType","currentReferrerHostname","unique","triggerSendPageView","deleteSourceInfo","currentPage","query","sendPageView","getHighEntropyValues","then","highEntropyValues","os_name","os_version","catch","e","his","history","hisPushState","pushState","dis","dispatchEvent","pushStateText","Event","orig","rv","this","createEvent","initEvent","sa_pageview","validTypes","sendEvent","callbackRaw","eventIsFunction","eventType","eventOutput","eventParams","firstPage","defaultEventFunc","eventFunc","queue","q"],"mappings":"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"}